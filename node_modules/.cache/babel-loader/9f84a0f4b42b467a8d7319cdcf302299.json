{"ast":null,"code":"var _jsxFileName = \"/Users/bcraig/Desktop/test/src/pages/Test.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Test() {\n  var panorama, viewer, container, infospot, panel;\n  container = document.querySelector(\"#container\");\n  panel = document.querySelector(\"#panel\");\n  panorama = new PANOLENS.ImagePanorama(\"https://pchen66.github.io/Panolens/examples/asset/textures/equirectangular/tunnel.jpg\");\n  infospot = new PANOLENS.Infospot(350, PANOLENS.DataImage.Info);\n  infospot.position.set(0, -2000, -5000);\n  infospot.addHoverElement(panel, 150);\n  panorama.add(infospot);\n  viewer = new PANOLENS.Viewer({\n    container: container\n  });\n  viewer.add(panorama);\n  var renderer, camera, scene, box;\n  renderer = new THREE.WebGLRenderer();\n  renderer.setClearColor(0xffffff);\n  renderer.setSize(panel.clientWidth, panel.clientHeight);\n  camera = new THREE.PerspectiveCamera(45, panel.clientWidth / panel.clientHeight, 1, 2000);\n  scene = new THREE.Scene();\n  console.log(infospot.element);\n  infospot.element.appendChild(renderer.domElement);\n  box = new THREE.Mesh(new THREE.BoxGeometry(10, 10, 10), new THREE.MeshNormalMaterial());\n  box.position.z = -20;\n  scene.add(box);\n  viewer.addUpdateCallback(function () {\n    renderer.render(scene, camera);\n    box.rotation.y += 0.03;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 10\n  }, this);\n}\n_c = Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"sources":["/Users/bcraig/Desktop/test/src/pages/Test.js"],"names":["React","Test","panorama","viewer","container","infospot","panel","document","querySelector","PANOLENS","ImagePanorama","Infospot","DataImage","Info","position","set","addHoverElement","add","Viewer","renderer","camera","scene","box","THREE","WebGLRenderer","setClearColor","setSize","clientWidth","clientHeight","PerspectiveCamera","Scene","console","log","element","appendChild","domElement","Mesh","BoxGeometry","MeshNormalMaterial","z","addUpdateCallback","render","rotation","y"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC7B,MAAIC,QAAJ,EAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,QAAjC,EAA2CC,KAA3C;AAEAF,EAAAA,SAAS,GAAGG,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAZ;AACAF,EAAAA,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAR;AAEAN,EAAAA,QAAQ,GAAG,IAAIO,QAAQ,CAACC,aAAb,CACT,uFADS,CAAX;AAIAL,EAAAA,QAAQ,GAAG,IAAII,QAAQ,CAACE,QAAb,CAAsB,GAAtB,EAA2BF,QAAQ,CAACG,SAAT,CAAmBC,IAA9C,CAAX;AACAR,EAAAA,QAAQ,CAACS,QAAT,CAAkBC,GAAlB,CAAsB,CAAtB,EAAyB,CAAC,IAA1B,EAAgC,CAAC,IAAjC;AACAV,EAAAA,QAAQ,CAACW,eAAT,CAAyBV,KAAzB,EAAgC,GAAhC;AAEAJ,EAAAA,QAAQ,CAACe,GAAT,CAAaZ,QAAb;AAEAF,EAAAA,MAAM,GAAG,IAAIM,QAAQ,CAACS,MAAb,CAAoB;AAAEd,IAAAA,SAAS,EAAEA;AAAb,GAApB,CAAT;AACAD,EAAAA,MAAM,CAACc,GAAP,CAAWf,QAAX;AAEA,MAAIiB,QAAJ,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,GAA7B;AAEAH,EAAAA,QAAQ,GAAG,IAAII,KAAK,CAACC,aAAV,EAAX;AACAL,EAAAA,QAAQ,CAACM,aAAT,CAAuB,QAAvB;AACAN,EAAAA,QAAQ,CAACO,OAAT,CAAiBpB,KAAK,CAACqB,WAAvB,EAAoCrB,KAAK,CAACsB,YAA1C;AACAR,EAAAA,MAAM,GAAG,IAAIG,KAAK,CAACM,iBAAV,CACP,EADO,EAEPvB,KAAK,CAACqB,WAAN,GAAoBrB,KAAK,CAACsB,YAFnB,EAGP,CAHO,EAIP,IAJO,CAAT;AAMAP,EAAAA,KAAK,GAAG,IAAIE,KAAK,CAACO,KAAV,EAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY3B,QAAQ,CAAC4B,OAArB;AACA5B,EAAAA,QAAQ,CAAC4B,OAAT,CAAiBC,WAAjB,CAA6Bf,QAAQ,CAACgB,UAAtC;AAEAb,EAAAA,GAAG,GAAG,IAAIC,KAAK,CAACa,IAAV,CACJ,IAAIb,KAAK,CAACc,WAAV,CAAsB,EAAtB,EAA0B,EAA1B,EAA8B,EAA9B,CADI,EAEJ,IAAId,KAAK,CAACe,kBAAV,EAFI,CAAN;AAIAhB,EAAAA,GAAG,CAACR,QAAJ,CAAayB,CAAb,GAAiB,CAAC,EAAlB;AACAlB,EAAAA,KAAK,CAACJ,GAAN,CAAUK,GAAV;AAEAnB,EAAAA,MAAM,CAACqC,iBAAP,CAAyB,YAAY;AACnCrB,IAAAA,QAAQ,CAACsB,MAAT,CAAgBpB,KAAhB,EAAuBD,MAAvB;AACAE,IAAAA,GAAG,CAACoB,QAAJ,CAAaC,CAAb,IAAkB,IAAlB;AACD,GAHD;AAIA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KA9CuB1C,I","sourcesContent":["import React from \"react\";\n\nexport default function Test() {\n  var panorama, viewer, container, infospot, panel;\n\n  container = document.querySelector(\"#container\");\n  panel = document.querySelector(\"#panel\");\n\n  panorama = new PANOLENS.ImagePanorama(\n    \"https://pchen66.github.io/Panolens/examples/asset/textures/equirectangular/tunnel.jpg\"\n  );\n\n  infospot = new PANOLENS.Infospot(350, PANOLENS.DataImage.Info);\n  infospot.position.set(0, -2000, -5000);\n  infospot.addHoverElement(panel, 150);\n\n  panorama.add(infospot);\n\n  viewer = new PANOLENS.Viewer({ container: container });\n  viewer.add(panorama);\n\n  var renderer, camera, scene, box;\n\n  renderer = new THREE.WebGLRenderer();\n  renderer.setClearColor(0xffffff);\n  renderer.setSize(panel.clientWidth, panel.clientHeight);\n  camera = new THREE.PerspectiveCamera(\n    45,\n    panel.clientWidth / panel.clientHeight,\n    1,\n    2000\n  );\n  scene = new THREE.Scene();\n  console.log(infospot.element);\n  infospot.element.appendChild(renderer.domElement);\n\n  box = new THREE.Mesh(\n    new THREE.BoxGeometry(10, 10, 10),\n    new THREE.MeshNormalMaterial()\n  );\n  box.position.z = -20;\n  scene.add(box);\n\n  viewer.addUpdateCallback(function () {\n    renderer.render(scene, camera);\n    box.rotation.y += 0.03;\n  });\n  return <div></div>;\n}\n"]},"metadata":{},"sourceType":"module"}