{"ast":null,"code":"var _jsxFileName = \"/Users/bcraig/Desktop/test/src/pages/Guided.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Typed from \"react-typed\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Guided() {\n  _s();\n\n  var panorama, viewer, typed, typed;\n  var meterInfospot, valveInfospot, seatInfospot, topboxInfospot, endingInfospot; // var progressElement = document.querySelector(\"#progress\")[0];\n\n  useEffect(() => {\n    var progressElement = document.querySelector(\"#progress\");\n    console.log(progressElement);\n  }, []); // const tweeningDelay = 300,\n  //   typeStartDelay = 1000,\n  //   typeSpeed = 50;\n  // const paragraphs = {\n  //   welcome: [\n  //     \"Panolens Presents\",\n  //     \"A Journey to a <strong>Train</strong>\",\n  //     \"Here we go\",\n  //   ],\n  //   meter: [\n  //     \"One of the common meter that you can see on a train\",\n  //     \"it is not specially eye-catching but it just can get your attention\",\n  //     \"it indicates how fast the train is currently going\",\n  //     \"Let us continue\",\n  //   ],\n  //   valve: [\n  //     \"A Valve\",\n  //     \"solid looking and quite decent color\",\n  //     \"here shows the evidence that time would leaves marks on everything\",\n  //     \"same thing applies to our face...\",\n  //   ],\n  //   seat: [\n  //     \"Alright. Here we have a seat. The green pad looks quite comfortable\",\n  //     \"when you are on a train\",\n  //     \"OK. Move on to next one\",\n  //   ],\n  //   box: [\n  //     \"There is a box over there\",\n  //     \"probably some fuse or electronic devices\",\n  //     \"Hmmmm............\",\n  //     \"Anyway\",\n  //     \"Let's keep moving\",\n  //   ],\n  //   ending: [\n  //     \"This is our last stop\",\n  //     \"Please continue your journey with this wonder train...\",\n  //   ],\n  // };\n  // // Patch for typed.js of cutting back-to-back words\n  // for (var section in paragraphs) {\n  //   if (paragraphs.hasOwnProperty(section)) {\n  //     paragraphs[section].unshift(\"\");\n  //     paragraphs[section].push(\"\");\n  //   }\n  // }\n  // function delayExecute(func, delay) {\n  //   setTimeout(func, delay);\n  // }\n  // function onLoad() {\n  //   type(paragraphs.welcome, onWelcomeComplete, 2000);\n  // }\n  // function onEnter(event) {\n  //   progressElement.style.width = 0;\n  //   progressElement.classList.remove(\"finish\");\n  // }\n  // function onProgress(event) {\n  //   var progress = (event.progress.loaded / event.progress.total) * 100;\n  //   progressElement.style.width = progress + \"%\";\n  //   if (progress === 100) {\n  //     progressElement.classList.add(\"finish\");\n  //   }\n  // }\n  // function onWelcomeComplete() {\n  //   delayExecute(meterInfospot.focus.bind(meterInfospot), tweeningDelay);\n  //   type(paragraphs.meter, onMeterTourComplete);\n  // }\n  // function onMeterTourComplete() {\n  //   delayExecute(valveInfospot.focus.bind(valveInfospot), tweeningDelay);\n  //   type(paragraphs.valve, onValveTourComplete);\n  // }\n  // function onValveTourComplete() {\n  //   delayExecute(seatInfospot.focus.bind(seatInfospot), tweeningDelay);\n  //   type(paragraphs.seat, onSeatTourComplete);\n  // }\n  // function onSeatTourComplete() {\n  //   delayExecute(topboxInfospot.focus.bind(topboxInfospot), tweeningDelay);\n  //   type(paragraphs.box, onTopboxTourComplete);\n  // }\n  // function onTopboxTourComplete() {\n  //   delayExecute(endingInfospot.focus.bind(endingInfospot), tweeningDelay);\n  //   type(paragraphs.ending, function () {\n  //     viewer.OrbitControls.enabled = true;\n  //   });\n  // }\n  // function type(stringArray, onComplete, startDelay) {\n  //   onComplete = onComplete || function () {};\n  //   startDelay = startDelay >= 0 ? startDelay : typeStartDelay;\n  //   typed = new Typed(\"#typed\", {\n  //     strings: stringArray,\n  //     typeSpeed: typeSpeed,\n  //     showCursor: false,\n  //     startDelay: startDelay,\n  //     onComplete: onComplete,\n  //   });\n  // }\n  // // Infospots\n  // meterInfospot = new PANOLENS.Infospot();\n  // valveInfospot = new PANOLENS.Infospot();\n  // seatInfospot = new PANOLENS.Infospot();\n  // topboxInfospot = new PANOLENS.Infospot();\n  // endingInfospot = new PANOLENS.Infospot(10e-7); // Make it not visible\n  // meterInfospot.position.set(4610.04, 1280.07, 1431.29);\n  // valveInfospot.position.set(4637.61, -798.12, -1671.24);\n  // seatInfospot.position.set(1934.61, -2611.69, -3792.91);\n  // topboxInfospot.position.set(-3348.82, 3705.92, 45.54);\n  // endingInfospot.position.set(-3461.4, -3592.37, -241.38);\n  // meterInfospot.addHoverText(\"Speedometer\", 50);\n  // valveInfospot.addHoverText(\"Valve\", 50);\n  // seatInfospot.addHoverText(\"Seat\", 50);\n  // topboxInfospot.addHoverText(\"Box\", 50);\n  // // Panorama\n  // panorama = new PANOLENS.ImagePanorama(one);\n  // panorama.addEventListener(\"progress\", onProgress);\n  // panorama.addEventListener(\"load\", onLoad);\n  // panorama.addEventListener(\"enter\", onEnter);\n  // panorama.add(\n  //   meterInfospot,\n  //   valveInfospot,\n  //   seatInfospot,\n  //   topboxInfospot,\n  //   endingInfospot\n  // );\n  // // Viewer\n  // viewer = new PANOLENS.Viewer({\n  //   controlBar: false,\n  //   initialLookAt: new THREE.Vector3(0, 0, 5000),\n  // });\n  // viewer.OrbitControls.enabled = false;\n  // viewer.add(panorama);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"typed\",\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Guided, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Guided;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guided\");","map":{"version":3,"sources":["/Users/bcraig/Desktop/test/src/pages/Guided.js"],"names":["React","useEffect","Typed","PANOLENS","THREE","one","two","three","four","five","six","Guided","panorama","viewer","typed","meterInfospot","valveInfospot","seatInfospot","topboxInfospot","endingInfospot","progressElement","document","querySelector","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAAA;;AAC/B,MAAIC,QAAJ,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BA,KAA7B;AAEA,MAAIC,aAAJ,EACEC,aADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,cAJF,CAH+B,CAS/B;;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAtB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,eAAZ;AACD,GAHQ,EAGN,EAHM,CAAT,CAX+B,CAgsBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD;;GA5KuBT,M;;KAAAA,M","sourcesContent":["import React, { useEffect } from \"react\";\nimport Typed from \"react-typed\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\n\nexport default function Guided() {\n  var panorama, viewer, typed, typed;\n\n  var meterInfospot,\n    valveInfospot,\n    seatInfospot,\n    topboxInfospot,\n    endingInfospot;\n\n  // var progressElement = document.querySelector(\"#progress\")[0];\n\n  useEffect(() => {\n    var progressElement = document.querySelector(\"#progress\");\n    console.log(progressElement);\n  }, []);\n\n  // const tweeningDelay = 300,\n  //   typeStartDelay = 1000,\n  //   typeSpeed = 50;\n\n  // const paragraphs = {\n  //   welcome: [\n  //     \"Panolens Presents\",\n  //     \"A Journey to a <strong>Train</strong>\",\n  //     \"Here we go\",\n  //   ],\n  //   meter: [\n  //     \"One of the common meter that you can see on a train\",\n  //     \"it is not specially eye-catching but it just can get your attention\",\n  //     \"it indicates how fast the train is currently going\",\n  //     \"Let us continue\",\n  //   ],\n  //   valve: [\n  //     \"A Valve\",\n  //     \"solid looking and quite decent color\",\n  //     \"here shows the evidence that time would leaves marks on everything\",\n  //     \"same thing applies to our face...\",\n  //   ],\n  //   seat: [\n  //     \"Alright. Here we have a seat. The green pad looks quite comfortable\",\n  //     \"when you are on a train\",\n  //     \"OK. Move on to next one\",\n  //   ],\n  //   box: [\n  //     \"There is a box over there\",\n  //     \"probably some fuse or electronic devices\",\n  //     \"Hmmmm............\",\n  //     \"Anyway\",\n  //     \"Let's keep moving\",\n  //   ],\n  //   ending: [\n  //     \"This is our last stop\",\n  //     \"Please continue your journey with this wonder train...\",\n  //   ],\n  // };\n\n  // // Patch for typed.js of cutting back-to-back words\n  // for (var section in paragraphs) {\n  //   if (paragraphs.hasOwnProperty(section)) {\n  //     paragraphs[section].unshift(\"\");\n  //     paragraphs[section].push(\"\");\n  //   }\n  // }\n\n  // function delayExecute(func, delay) {\n  //   setTimeout(func, delay);\n  // }\n\n  // function onLoad() {\n  //   type(paragraphs.welcome, onWelcomeComplete, 2000);\n  // }\n\n  // function onEnter(event) {\n  //   progressElement.style.width = 0;\n  //   progressElement.classList.remove(\"finish\");\n  // }\n\n  // function onProgress(event) {\n  //   var progress = (event.progress.loaded / event.progress.total) * 100;\n  //   progressElement.style.width = progress + \"%\";\n  //   if (progress === 100) {\n  //     progressElement.classList.add(\"finish\");\n  //   }\n  // }\n\n  // function onWelcomeComplete() {\n  //   delayExecute(meterInfospot.focus.bind(meterInfospot), tweeningDelay);\n  //   type(paragraphs.meter, onMeterTourComplete);\n  // }\n\n  // function onMeterTourComplete() {\n  //   delayExecute(valveInfospot.focus.bind(valveInfospot), tweeningDelay);\n  //   type(paragraphs.valve, onValveTourComplete);\n  // }\n\n  // function onValveTourComplete() {\n  //   delayExecute(seatInfospot.focus.bind(seatInfospot), tweeningDelay);\n  //   type(paragraphs.seat, onSeatTourComplete);\n  // }\n\n  // function onSeatTourComplete() {\n  //   delayExecute(topboxInfospot.focus.bind(topboxInfospot), tweeningDelay);\n  //   type(paragraphs.box, onTopboxTourComplete);\n  // }\n\n  // function onTopboxTourComplete() {\n  //   delayExecute(endingInfospot.focus.bind(endingInfospot), tweeningDelay);\n  //   type(paragraphs.ending, function () {\n  //     viewer.OrbitControls.enabled = true;\n  //   });\n  // }\n\n  // function type(stringArray, onComplete, startDelay) {\n  //   onComplete = onComplete || function () {};\n  //   startDelay = startDelay >= 0 ? startDelay : typeStartDelay;\n\n  //   typed = new Typed(\"#typed\", {\n  //     strings: stringArray,\n  //     typeSpeed: typeSpeed,\n  //     showCursor: false,\n  //     startDelay: startDelay,\n  //     onComplete: onComplete,\n  //   });\n  // }\n\n  // // Infospots\n  // meterInfospot = new PANOLENS.Infospot();\n  // valveInfospot = new PANOLENS.Infospot();\n  // seatInfospot = new PANOLENS.Infospot();\n  // topboxInfospot = new PANOLENS.Infospot();\n  // endingInfospot = new PANOLENS.Infospot(10e-7); // Make it not visible\n\n  // meterInfospot.position.set(4610.04, 1280.07, 1431.29);\n  // valveInfospot.position.set(4637.61, -798.12, -1671.24);\n  // seatInfospot.position.set(1934.61, -2611.69, -3792.91);\n  // topboxInfospot.position.set(-3348.82, 3705.92, 45.54);\n  // endingInfospot.position.set(-3461.4, -3592.37, -241.38);\n\n  // meterInfospot.addHoverText(\"Speedometer\", 50);\n  // valveInfospot.addHoverText(\"Valve\", 50);\n  // seatInfospot.addHoverText(\"Seat\", 50);\n  // topboxInfospot.addHoverText(\"Box\", 50);\n\n  // // Panorama\n  // panorama = new PANOLENS.ImagePanorama(one);\n  // panorama.addEventListener(\"progress\", onProgress);\n  // panorama.addEventListener(\"load\", onLoad);\n  // panorama.addEventListener(\"enter\", onEnter);\n  // panorama.add(\n  //   meterInfospot,\n  //   valveInfospot,\n  //   seatInfospot,\n  //   topboxInfospot,\n  //   endingInfospot\n  // );\n\n  // // Viewer\n  // viewer = new PANOLENS.Viewer({\n  //   controlBar: false,\n  //   initialLookAt: new THREE.Vector3(0, 0, 5000),\n  // });\n  // viewer.OrbitControls.enabled = false;\n  // viewer.add(panorama);\n\n  return (\n    <>\n      <div id=\"progress\"></div>\n      <div id=\"dialog\">\n        <div id=\"typed\">Hello</div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}