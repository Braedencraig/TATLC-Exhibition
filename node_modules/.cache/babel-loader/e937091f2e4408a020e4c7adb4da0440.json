{"ast":null,"code":"var _jsxFileName = \"/Users/bcraig/Desktop/test/src/pages/SelfGuided.js\";\nimport React from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport ReactHowler from \"react-howler\";\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\nimport video from \"../assets/video.mp4\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SelfGuided() {\n  var panorama, viewer, container, infospot, panel;\n  container = document.querySelector(\"#container\");\n  panel = document.querySelector(\"#panel\");\n  panorama = new PANOLENS.ImagePanorama(\"https://pchen66.github.io/Panolens/examples/asset/textures/equirectangular/tunnel.jpg\");\n  infospot = new PANOLENS.Infospot(350, PANOLENS.DataImage.Info);\n  infospot.position.set(0, -2000, -5000);\n  setTimeout(() => {\n    infospot.addHoverElement(panel, 150);\n  }, 2000);\n  panorama.add(infospot);\n  viewer = new PANOLENS.Viewer({\n    container: container\n  });\n  viewer.add(panorama);\n  var renderer, camera, scene, box;\n\n  if (panel) {\n    console.log(panel);\n  } // renderer = new THREE.WebGLRenderer();\n  // renderer.setClearColor(0xffffff);\n  // renderer.setSize(panel.clientWidth, panel.clientHeight);\n  // camera = new THREE.PerspectiveCamera(\n  //   45,\n  //   panel.clientWidth / panel.clientHeight,\n  //   1,\n  //   2000\n  // );\n  // scene = new THREE.Scene();\n  // console.log(infospot.element);\n  // infospot.element.appendChild(renderer.domElement);\n  // box = new THREE.Mesh(\n  //   new THREE.BoxGeometry(10, 10, 10),\n  //   new THREE.MeshNormalMaterial()\n  // );\n  // box.position.z = -20;\n  // scene.add(box);\n  // viewer.addUpdateCallback(function () {\n  //   renderer.render(scene, camera);\n  //   box.rotation.y += 0.03;\n  // });\n  // let panorama1, panorama2, panorama3, panorama4, panorama5, panorama6, viewer;\n  // panorama1 = new PANOLENS.ImagePanorama(one);\n  // panorama2 = new PANOLENS.ImagePanorama(two);\n  // panorama3 = new PANOLENS.ImagePanorama(three);\n  // panorama4 = new PANOLENS.ImagePanorama(four);\n  // panorama5 = new PANOLENS.ImagePanorama(five);\n  // panorama6 = new PANOLENS.ImagePanorama(six);\n  // panorama1.link(panorama2, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama2.link(panorama3, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama3.link(panorama4, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama4.link(panorama5, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama5.link(panorama6, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama6.link(panorama1, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // var renderer, camera, scene, box, panel, infospot;\n  // panel = document.querySelector(\"#panel\");\n  // infospot = new PANOLENS.Infospot(350, PANOLENS.DataImage.Info);\n  // infospot.position.set(0, -2000, -5000);\n  // infospot.addHoverElement(panel, 150);\n  // panorama1.add(infospot);\n  // renderer = new THREE.WebGLRenderer();\n  // renderer.setClearColor(0xffffff);\n  // renderer.setSize(panel.clientWidth, panel.clientHeight);\n  // // camera = new THREE.PerspectiveCamera(\n  // //   45,\n  // //   panel.clientWidth / panel.clientHeight,\n  // //   1,\n  // //   2000\n  // // );\n  // // scene = new THREE.Scene();\n  // // console.log(infospot.element);\n  // // infospot.element.appendChild(renderer.domElement);\n  // // box = new THREE.Mesh(\n  // //   new THREE.BoxGeometry(10, 10, 10),\n  // //   new THREE.MeshNormalMaterial()\n  // // );\n  // // box.position.z = -20;\n  // // scene.add(box);\n  // // viewer.addUpdateCallback(function () {\n  // //   renderer.render(scene, camera);\n  // //   box.rotation.y += 0.03;\n  // // });\n  // // const video = document.createElement(\"video\");\n  // // // const canPlay = () => dispatchEvent({ type: \"canplay\" });\n  // // video.src =\n  // //   \"http://learn.shayhowe.com/assets/misc/courses/html-css/adding-media/earth.mp4\";\n  // // video.setAttribute(\"autoplay\", \"\");\n  // // video.setAttribute(\"muted\", \"\");\n  // // video.setAttribute(\"crossOrigin\", \"anonymous\");\n  // // video.setAttribute(\"playsinline\", \"\");\n  // // video.style.position = \"absolute\";\n  // // video.style.top = \"0\";\n  // // video.style.left = \"0\";\n  // // video.style.width = \"100%\";\n  // // video.style.height = \"100%\";\n  // // video.style.objectPosition = \"center\";\n  // // video.style.objectFit = \"cover\";\n  // // // REMOVE THIS\n  // // video.style.display = \"none\";\n  // // // video.addEventListener(\"canplay\", canPlay);\n  // // console.log(video);\n  // // const texture = new THREE.VideoTexture(video);\n  // // texture.needsUpdate = true;\n  // // texture.generateMipmaps = false;\n  // // texture.minFilter = THREE.LinearFilter;\n  // // texture.magFilter = THREE.LinearFilter;\n  // // texture.format = THREE.RGBFormat;\n  // // texture.center.set(0.5, 0.5);\n  // // const boxWidth = 100;\n  // // const boxHeight = 100;\n  // // const boxDepth = 100;\n  // // const geometry = new THREE.BoxGeometry(boxWidth, boxHeight, boxDepth);\n  // // const material = new THREE.MeshBasicMaterial({ map: texture });\n  // // material.needsUpdate = true;\n  // // const loader = new THREE.TextureLoader();\n  // // const material = new THREE.MeshBasicMaterial({\n  // //   map: loader.load(\n  // //     \"https://threejsfundamentals.org/threejs/resources/images/wall.jpg\"\n  // //   ),\n  // // });\n  // // const cube = new THREE.Mesh(geometry, material);\n  // // cube.position.set(-300, 100, 100);\n  // // panorama1.add(cube);\n  // // viewer.addUpdateCallback(function () {\n  // //   cube.rotation.y += 0.05;\n  // //   cube.rotation.x += 0.02;\n  // // });\n  // // var video = document.getElementById(\"video\");\n  // // video.play();\n  // // var vidTexture = new THREE.VideoTexture(video);\n  // // vidTexture.minFilter = THREE.LinearFilter;\n  // // vidTexture.magFilter = THREE.LinearFilter;\n  // // vidTexture.format = THREE.RGBFormat;\n  // // var cube = new THREE.Mesh(\n  // //   new THREE.BoxGeometry(30, 30, 30),\n  // //   new THREE.MeshBasicMaterial({\n  // //     map: vidTexture,\n  // //   })\n  // // );\n  // // panorama1.add(cube);\n  // viewer = new PANOLENS.Viewer({ autoHideInfospot: false });\n  // // viewer.addUpdateCallback(function () {\n  // //   cube.rotation.y += 0.05;\n  // //   cube.rotation.x += 0.02;\n  // //   panorama1.updateTexture(vidTexture);\n  // // });\n  // viewer.add(panorama1, panorama2, panorama3, panorama4, panorama5, panorama6);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactHowler, {\n      src: \"https://memorypearl.s3.us-east-2.amazonaws.com/269570__vonora__cuckoo-the-nightingale-duet.mp3\",\n      playing: true,\n      loop: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"panel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = SelfGuided;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelfGuided\");","map":{"version":3,"sources":["/Users/bcraig/Desktop/test/src/pages/SelfGuided.js"],"names":["React","PANOLENS","THREE","ReactHowler","one","two","three","four","five","six","video","SelfGuided","panorama","viewer","container","infospot","panel","document","querySelector","ImagePanorama","Infospot","DataImage","Info","position","set","setTimeout","addHoverElement","add","Viewer","renderer","camera","scene","box","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;;;AAEA,eAAe,SAASC,UAAT,GAAsB;AACnC,MAAIC,QAAJ,EAAcC,MAAd,EAAsBC,SAAtB,EAAiCC,QAAjC,EAA2CC,KAA3C;AAEAF,EAAAA,SAAS,GAAGG,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAZ;AACAF,EAAAA,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAR;AAEAN,EAAAA,QAAQ,GAAG,IAAIX,QAAQ,CAACkB,aAAb,CACT,uFADS,CAAX;AAIAJ,EAAAA,QAAQ,GAAG,IAAId,QAAQ,CAACmB,QAAb,CAAsB,GAAtB,EAA2BnB,QAAQ,CAACoB,SAAT,CAAmBC,IAA9C,CAAX;AACAP,EAAAA,QAAQ,CAACQ,QAAT,CAAkBC,GAAlB,CAAsB,CAAtB,EAAyB,CAAC,IAA1B,EAAgC,CAAC,IAAjC;AACAC,EAAAA,UAAU,CAAC,MAAM;AACfV,IAAAA,QAAQ,CAACW,eAAT,CAAyBV,KAAzB,EAAgC,GAAhC;AACD,GAFS,EAEP,IAFO,CAAV;AAIAJ,EAAAA,QAAQ,CAACe,GAAT,CAAaZ,QAAb;AAEAF,EAAAA,MAAM,GAAG,IAAIZ,QAAQ,CAAC2B,MAAb,CAAoB;AAAEd,IAAAA,SAAS,EAAEA;AAAb,GAApB,CAAT;AACAD,EAAAA,MAAM,CAACc,GAAP,CAAWf,QAAX;AAEA,MAAIiB,QAAJ,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BC,GAA7B;;AAEA,MAAIhB,KAAJ,EAAW;AACTiB,IAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACD,GAzBkC,CA2BnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,sBACE;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,GAAG,EAAC,gGADN;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,IAAI,EAAE;AAHR;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YANF,eAOE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA,kBADF;AAyCD;KAzNuBL,U","sourcesContent":["import React from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport ReactHowler from \"react-howler\";\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\nimport video from \"../assets/video.mp4\";\n\nexport default function SelfGuided() {\n  var panorama, viewer, container, infospot, panel;\n\n  container = document.querySelector(\"#container\");\n  panel = document.querySelector(\"#panel\");\n\n  panorama = new PANOLENS.ImagePanorama(\n    \"https://pchen66.github.io/Panolens/examples/asset/textures/equirectangular/tunnel.jpg\"\n  );\n\n  infospot = new PANOLENS.Infospot(350, PANOLENS.DataImage.Info);\n  infospot.position.set(0, -2000, -5000);\n  setTimeout(() => {\n    infospot.addHoverElement(panel, 150);\n  }, 2000);\n\n  panorama.add(infospot);\n\n  viewer = new PANOLENS.Viewer({ container: container });\n  viewer.add(panorama);\n\n  var renderer, camera, scene, box;\n\n  if (panel) {\n    console.log(panel);\n  }\n\n  // renderer = new THREE.WebGLRenderer();\n  // renderer.setClearColor(0xffffff);\n  // renderer.setSize(panel.clientWidth, panel.clientHeight);\n  // camera = new THREE.PerspectiveCamera(\n  //   45,\n  //   panel.clientWidth / panel.clientHeight,\n  //   1,\n  //   2000\n  // );\n  // scene = new THREE.Scene();\n  // console.log(infospot.element);\n  // infospot.element.appendChild(renderer.domElement);\n\n  // box = new THREE.Mesh(\n  //   new THREE.BoxGeometry(10, 10, 10),\n  //   new THREE.MeshNormalMaterial()\n  // );\n  // box.position.z = -20;\n  // scene.add(box);\n\n  // viewer.addUpdateCallback(function () {\n  //   renderer.render(scene, camera);\n  //   box.rotation.y += 0.03;\n  // });\n  // let panorama1, panorama2, panorama3, panorama4, panorama5, panorama6, viewer;\n  // panorama1 = new PANOLENS.ImagePanorama(one);\n  // panorama2 = new PANOLENS.ImagePanorama(two);\n  // panorama3 = new PANOLENS.ImagePanorama(three);\n  // panorama4 = new PANOLENS.ImagePanorama(four);\n  // panorama5 = new PANOLENS.ImagePanorama(five);\n  // panorama6 = new PANOLENS.ImagePanorama(six);\n  // panorama1.link(panorama2, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama2.link(panorama3, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama3.link(panorama4, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama4.link(panorama5, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama5.link(panorama6, new THREE.Vector3(-807.5, 604.88, -5000.0));\n  // panorama6.link(panorama1, new THREE.Vector3(-807.5, 604.88, -5000.0));\n\n  // var renderer, camera, scene, box, panel, infospot;\n\n  // panel = document.querySelector(\"#panel\");\n\n  // infospot = new PANOLENS.Infospot(350, PANOLENS.DataImage.Info);\n  // infospot.position.set(0, -2000, -5000);\n  // infospot.addHoverElement(panel, 150);\n\n  // panorama1.add(infospot);\n\n  // renderer = new THREE.WebGLRenderer();\n  // renderer.setClearColor(0xffffff);\n  // renderer.setSize(panel.clientWidth, panel.clientHeight);\n  // // camera = new THREE.PerspectiveCamera(\n  // //   45,\n  // //   panel.clientWidth / panel.clientHeight,\n  // //   1,\n  // //   2000\n  // // );\n  // // scene = new THREE.Scene();\n  // // console.log(infospot.element);\n  // // infospot.element.appendChild(renderer.domElement);\n\n  // // box = new THREE.Mesh(\n  // //   new THREE.BoxGeometry(10, 10, 10),\n  // //   new THREE.MeshNormalMaterial()\n  // // );\n  // // box.position.z = -20;\n  // // scene.add(box);\n\n  // // viewer.addUpdateCallback(function () {\n  // //   renderer.render(scene, camera);\n  // //   box.rotation.y += 0.03;\n  // // });\n\n  // // const video = document.createElement(\"video\");\n  // // // const canPlay = () => dispatchEvent({ type: \"canplay\" });\n  // // video.src =\n  // //   \"http://learn.shayhowe.com/assets/misc/courses/html-css/adding-media/earth.mp4\";\n  // // video.setAttribute(\"autoplay\", \"\");\n  // // video.setAttribute(\"muted\", \"\");\n  // // video.setAttribute(\"crossOrigin\", \"anonymous\");\n  // // video.setAttribute(\"playsinline\", \"\");\n  // // video.style.position = \"absolute\";\n  // // video.style.top = \"0\";\n  // // video.style.left = \"0\";\n  // // video.style.width = \"100%\";\n  // // video.style.height = \"100%\";\n  // // video.style.objectPosition = \"center\";\n  // // video.style.objectFit = \"cover\";\n  // // // REMOVE THIS\n  // // video.style.display = \"none\";\n  // // // video.addEventListener(\"canplay\", canPlay);\n  // // console.log(video);\n\n  // // const texture = new THREE.VideoTexture(video);\n  // // texture.needsUpdate = true;\n  // // texture.generateMipmaps = false;\n  // // texture.minFilter = THREE.LinearFilter;\n  // // texture.magFilter = THREE.LinearFilter;\n  // // texture.format = THREE.RGBFormat;\n  // // texture.center.set(0.5, 0.5);\n\n  // // const boxWidth = 100;\n  // // const boxHeight = 100;\n  // // const boxDepth = 100;\n  // // const geometry = new THREE.BoxGeometry(boxWidth, boxHeight, boxDepth);\n  // // const material = new THREE.MeshBasicMaterial({ map: texture });\n  // // material.needsUpdate = true;\n\n  // // const loader = new THREE.TextureLoader();\n  // // const material = new THREE.MeshBasicMaterial({\n  // //   map: loader.load(\n  // //     \"https://threejsfundamentals.org/threejs/resources/images/wall.jpg\"\n  // //   ),\n  // // });\n  // // const cube = new THREE.Mesh(geometry, material);\n  // // cube.position.set(-300, 100, 100);\n  // // panorama1.add(cube);\n\n  // // viewer.addUpdateCallback(function () {\n  // //   cube.rotation.y += 0.05;\n  // //   cube.rotation.x += 0.02;\n  // // });\n  // // var video = document.getElementById(\"video\");\n  // // video.play();\n\n  // // var vidTexture = new THREE.VideoTexture(video);\n  // // vidTexture.minFilter = THREE.LinearFilter;\n  // // vidTexture.magFilter = THREE.LinearFilter;\n  // // vidTexture.format = THREE.RGBFormat;\n\n  // // var cube = new THREE.Mesh(\n  // //   new THREE.BoxGeometry(30, 30, 30),\n  // //   new THREE.MeshBasicMaterial({\n  // //     map: vidTexture,\n  // //   })\n  // // );\n\n  // // panorama1.add(cube);\n\n  // viewer = new PANOLENS.Viewer({ autoHideInfospot: false });\n\n  // // viewer.addUpdateCallback(function () {\n  // //   cube.rotation.y += 0.05;\n  // //   cube.rotation.x += 0.02;\n  // //   panorama1.updateTexture(vidTexture);\n  // // });\n\n  // viewer.add(panorama1, panorama2, panorama3, panorama4, panorama5, panorama6);\n\n  return (\n    <>\n      <ReactHowler\n        src=\"https://memorypearl.s3.us-east-2.amazonaws.com/269570__vonora__cuckoo-the-nightingale-duet.mp3\"\n        playing={true}\n        loop={true}\n      />\n      <div id=\"container\"></div>\n      <div id=\"panel\"></div>\n      {/* <video\n        loop\n        id=\"video\"\n        src=\"http://learn.shayhowe.com/assets/misc/courses/html-css/adding-media/earth.mp4\"\n        crossOrigin=\"anonymous\"\n        playsinline\n      ></video> */}\n\n      {/* <button id=\"startButton\">Click to Play Video Texture</button> */}\n      {/* <video\n        id=\"video\"\n        playsInLine\n        webkit-playsinline\n        muted\n        loop\n        autoPlay\n        width=\"320\"\n        height=\"240\"\n        crossOrigin=\"anonymous\"\n        src=\"https://pchen66.github.io/Panolens/examples/asset/textures/video/1941-battle-low.mp4\"\n      ></video> */}\n\n      {/* <video\n        id=\"video\"\n        src=\"https://pchen66.github.io/Panolens/examples/asset/textures/video/1941-battle-low.mp4\"\n        loop\n        muted\n        playsinline\n        crossorigin=\"anonymous\"\n      /> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}