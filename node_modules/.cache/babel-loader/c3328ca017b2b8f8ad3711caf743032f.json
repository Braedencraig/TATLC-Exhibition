{"ast":null,"code":"var _jsxFileName = \"/Users/bcraig/Desktop/test/src/pages/Guided.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\"; // import * as TYPED from \"typed\";\n\nimport one from \"../assets/spheres/one.jpg\"; // import two from \"../assets/spheres/two.jpg\";\n// import three from \"../assets/spheres/three.jpg\";\n// import four from \"../assets/spheres/four.jpg\";\n// import five from \"../assets/spheres/five.jpg\";\n// import six from \"../assets/spheres/six.jpg\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createMarkup() {\n  return {\n    __html: \"<div id='progress'></div><div id='dialog'><div id='typed'>Hello</div></div>\"\n  };\n}\n\nexport default function Guided() {\n  _s();\n\n  const [progressEl, setProgessEl] = useState(null);\n  var panorama, viewer, typed, typed;\n\n  var Typed = require(\"../../node_modules/typed.js\");\n\n  var meterInfospot, valveInfospot, seatInfospot, topboxInfospot, endingInfospot;\n  useEffect(() => {\n    setProgessEl(document.querySelector(\"#progress\"));\n  }, [setProgessEl]); // var progressEl = document.querySelector(\"#progress\");\n\n  console.log(progressEl);\n  var tweeningDelay = 300,\n      typeStartDelay = 1000,\n      typeSpeed = 10;\n  var paragraphs = {\n    welcome: [\"Panolens Presents\", \"A Journey to a <strong>Train</strong>\", \"Here we go\"],\n    meter: [\"One of the common meter that you can see on a train\", \"it is not specially eye-catching but it just can get your attention\", \"it indicates how fast the train is currently going\", \"Let us continue\"],\n    valve: [\"A Valve\", \"solid looking and quite decent color\", \"here shows the evidence that time would leaves marks on everything\", \"same thing applies to our face...\"],\n    seat: [\"Alright. Here we have a seat. The green pad looks quite comfortable\", \"when you are on a train\", \"OK. Move on to next one\"],\n    box: [\"There is a box over there\", \"probably some fuse or electronic devices\", \"Hmmmm............\", \"Anyway\", \"Let's keep moving\"],\n    ending: [\"This is our last stop\", \"Please continue your journey with this wonder train...\"]\n  }; // Patch for typed.js of cutting back-to-back words\n\n  for (var section in paragraphs) {\n    if (paragraphs.hasOwnProperty(section)) {\n      paragraphs[section].unshift(\"\");\n      paragraphs[section].push(\"\");\n    }\n  }\n\n  function delayExecute(func, delay) {\n    setTimeout(func, delay);\n  }\n\n  function onLoad() {\n    type(paragraphs.welcome, onWelcomeComplete, 2000);\n  }\n\n  function onEnter(event) {\n    if (progressEl) {\n      progressEl.style.width = 0;\n      progressEl.classList.remove(\"finish\");\n    }\n  }\n\n  function onProgress(event) {\n    var progress = event.progress.loaded / event.progress.total * 100;\n\n    if (progressEl) {\n      progressEl.style.width = progress + \"%\";\n\n      if (progress === 100) {\n        progressEl.classList.add(\"finish\");\n      }\n    }\n  }\n\n  function onWelcomeComplete() {\n    delayExecute(meterInfospot.focus.bind(meterInfospot), tweeningDelay);\n    type(paragraphs.meter, onMeterTourComplete);\n  }\n\n  function onMeterTourComplete() {\n    delayExecute(valveInfospot.focus.bind(valveInfospot), tweeningDelay);\n    type(paragraphs.valve, onValveTourComplete);\n  }\n\n  function onValveTourComplete() {\n    delayExecute(seatInfospot.focus.bind(seatInfospot), tweeningDelay);\n    type(paragraphs.seat, onSeatTourComplete);\n  }\n\n  function onSeatTourComplete() {\n    delayExecute(topboxInfospot.focus.bind(topboxInfospot), tweeningDelay);\n    type(paragraphs.box, onTopboxTourComplete);\n  }\n\n  function onTopboxTourComplete() {\n    delayExecute(endingInfospot.focus.bind(endingInfospot), tweeningDelay);\n    type(paragraphs.ending, function () {\n      viewer.OrbitControls.enabled = true;\n    });\n  }\n\n  function type(stringArray, onComplete, startDelay) {\n    onComplete = onComplete || function () {};\n\n    startDelay = startDelay >= 0 ? startDelay : typeStartDelay;\n    typed = new Typed(\"#typed\", {\n      strings: stringArray,\n      typeSpeed: typeSpeed,\n      showCursor: false,\n      startDelay: startDelay,\n      onComplete: onComplete\n    });\n  } // Infospots\n\n\n  meterInfospot = new PANOLENS.Infospot();\n  valveInfospot = new PANOLENS.Infospot();\n  seatInfospot = new PANOLENS.Infospot();\n  topboxInfospot = new PANOLENS.Infospot();\n  endingInfospot = new PANOLENS.Infospot(10e-7); // Make it not visible\n\n  meterInfospot.position.set(4610.04, 1280.07, 1431.29);\n  valveInfospot.position.set(4637.61, -798.12, -1671.24);\n  seatInfospot.position.set(1934.61, -2611.69, -3792.91);\n  topboxInfospot.position.set(-3348.82, 3705.92, 45.54);\n  endingInfospot.position.set(-3461.4, -3592.37, -241.38);\n  meterInfospot.addHoverText(\"Speedometer\", 50);\n  valveInfospot.addHoverText(\"Valve\", 50);\n  seatInfospot.addHoverText(\"Seat\", 50);\n  topboxInfospot.addHoverText(\"Box\", 50); // Panorama\n\n  panorama = new PANOLENS.ImagePanorama(one);\n  panorama.addEventListener(\"progress\", onProgress);\n  panorama.addEventListener(\"load\", onLoad);\n  panorama.addEventListener(\"enter\", onEnter);\n  panorama.add(meterInfospot, valveInfospot, seatInfospot, topboxInfospot, endingInfospot); // Viewer\n\n  viewer = new PANOLENS.Viewer({\n    controlBar: false,\n    initialLookAt: new THREE.Vector3(0, 0, 5000)\n  });\n  viewer.OrbitControls.enabled = false;\n  viewer.add(panorama);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      dangerouslySetInnerHTML: createMarkup()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Guided, \"9Pa7Dk0Rn9MHc5x6ojKlatW6924=\");\n\n_c = Guided;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guided\");","map":{"version":3,"sources":["/Users/bcraig/Desktop/test/src/pages/Guided.js"],"names":["React","useEffect","useState","PANOLENS","THREE","one","createMarkup","__html","Guided","progressEl","setProgessEl","panorama","viewer","typed","Typed","require","meterInfospot","valveInfospot","seatInfospot","topboxInfospot","endingInfospot","document","querySelector","console","log","tweeningDelay","typeStartDelay","typeSpeed","paragraphs","welcome","meter","valve","seat","box","ending","section","hasOwnProperty","unshift","push","delayExecute","func","delay","setTimeout","onLoad","type","onWelcomeComplete","onEnter","event","style","width","classList","remove","onProgress","progress","loaded","total","add","focus","bind","onMeterTourComplete","onValveTourComplete","onSeatTourComplete","onTopboxTourComplete","OrbitControls","enabled","stringArray","onComplete","startDelay","strings","showCursor","Infospot","position","set","addHoverText","ImagePanorama","addEventListener","Viewer","controlBar","initialLookAt","Vector3"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\n// import * as TYPED from \"typed\";\nimport one from \"../assets/spheres/one.jpg\";\n// import two from \"../assets/spheres/two.jpg\";\n// import three from \"../assets/spheres/three.jpg\";\n// import four from \"../assets/spheres/four.jpg\";\n// import five from \"../assets/spheres/five.jpg\";\n// import six from \"../assets/spheres/six.jpg\";\n\nfunction createMarkup() {\n  return {\n    __html:\n      \"<div id='progress'></div><div id='dialog'><div id='typed'>Hello</div></div>\",\n  };\n}\n\nexport default function Guided() {\n  const [progressEl, setProgessEl] = useState(null);\n  var panorama, viewer, typed, typed;\n  var Typed = require(\"../../node_modules/typed.js\");\n\n  var meterInfospot,\n    valveInfospot,\n    seatInfospot,\n    topboxInfospot,\n    endingInfospot;\n\n  useEffect(() => {\n    setProgessEl(document.querySelector(\"#progress\"));\n  }, [setProgessEl]);\n\n  // var progressEl = document.querySelector(\"#progress\");\n  console.log(progressEl);\n\n  var tweeningDelay = 300,\n    typeStartDelay = 1000,\n    typeSpeed = 10;\n\n  var paragraphs = {\n    welcome: [\n      \"Panolens Presents\",\n      \"A Journey to a <strong>Train</strong>\",\n      \"Here we go\",\n    ],\n    meter: [\n      \"One of the common meter that you can see on a train\",\n      \"it is not specially eye-catching but it just can get your attention\",\n      \"it indicates how fast the train is currently going\",\n      \"Let us continue\",\n    ],\n    valve: [\n      \"A Valve\",\n      \"solid looking and quite decent color\",\n      \"here shows the evidence that time would leaves marks on everything\",\n      \"same thing applies to our face...\",\n    ],\n    seat: [\n      \"Alright. Here we have a seat. The green pad looks quite comfortable\",\n      \"when you are on a train\",\n      \"OK. Move on to next one\",\n    ],\n    box: [\n      \"There is a box over there\",\n      \"probably some fuse or electronic devices\",\n      \"Hmmmm............\",\n      \"Anyway\",\n      \"Let's keep moving\",\n    ],\n    ending: [\n      \"This is our last stop\",\n      \"Please continue your journey with this wonder train...\",\n    ],\n  };\n\n  // Patch for typed.js of cutting back-to-back words\n  for (var section in paragraphs) {\n    if (paragraphs.hasOwnProperty(section)) {\n      paragraphs[section].unshift(\"\");\n      paragraphs[section].push(\"\");\n    }\n  }\n\n  function delayExecute(func, delay) {\n    setTimeout(func, delay);\n  }\n\n  function onLoad() {\n    type(paragraphs.welcome, onWelcomeComplete, 2000);\n  }\n\n  function onEnter(event) {\n    if (progressEl) {\n      progressEl.style.width = 0;\n      progressEl.classList.remove(\"finish\");\n    }\n  }\n\n  function onProgress(event) {\n    var progress = (event.progress.loaded / event.progress.total) * 100;\n    if (progressEl) {\n      progressEl.style.width = progress + \"%\";\n      if (progress === 100) {\n        progressEl.classList.add(\"finish\");\n      }\n    }\n  }\n\n  function onWelcomeComplete() {\n    delayExecute(meterInfospot.focus.bind(meterInfospot), tweeningDelay);\n    type(paragraphs.meter, onMeterTourComplete);\n  }\n\n  function onMeterTourComplete() {\n    delayExecute(valveInfospot.focus.bind(valveInfospot), tweeningDelay);\n    type(paragraphs.valve, onValveTourComplete);\n  }\n\n  function onValveTourComplete() {\n    delayExecute(seatInfospot.focus.bind(seatInfospot), tweeningDelay);\n    type(paragraphs.seat, onSeatTourComplete);\n  }\n\n  function onSeatTourComplete() {\n    delayExecute(topboxInfospot.focus.bind(topboxInfospot), tweeningDelay);\n    type(paragraphs.box, onTopboxTourComplete);\n  }\n\n  function onTopboxTourComplete() {\n    delayExecute(endingInfospot.focus.bind(endingInfospot), tweeningDelay);\n    type(paragraphs.ending, function () {\n      viewer.OrbitControls.enabled = true;\n    });\n  }\n\n  function type(stringArray, onComplete, startDelay) {\n    onComplete = onComplete || function () {};\n    startDelay = startDelay >= 0 ? startDelay : typeStartDelay;\n\n    typed = new Typed(\"#typed\", {\n      strings: stringArray,\n      typeSpeed: typeSpeed,\n      showCursor: false,\n      startDelay: startDelay,\n      onComplete: onComplete,\n    });\n  }\n\n  // Infospots\n  meterInfospot = new PANOLENS.Infospot();\n  valveInfospot = new PANOLENS.Infospot();\n  seatInfospot = new PANOLENS.Infospot();\n  topboxInfospot = new PANOLENS.Infospot();\n  endingInfospot = new PANOLENS.Infospot(10e-7); // Make it not visible\n\n  meterInfospot.position.set(4610.04, 1280.07, 1431.29);\n  valveInfospot.position.set(4637.61, -798.12, -1671.24);\n  seatInfospot.position.set(1934.61, -2611.69, -3792.91);\n  topboxInfospot.position.set(-3348.82, 3705.92, 45.54);\n  endingInfospot.position.set(-3461.4, -3592.37, -241.38);\n\n  meterInfospot.addHoverText(\"Speedometer\", 50);\n  valveInfospot.addHoverText(\"Valve\", 50);\n  seatInfospot.addHoverText(\"Seat\", 50);\n  topboxInfospot.addHoverText(\"Box\", 50);\n\n  // Panorama\n  panorama = new PANOLENS.ImagePanorama(one);\n  panorama.addEventListener(\"progress\", onProgress);\n  panorama.addEventListener(\"load\", onLoad);\n  panorama.addEventListener(\"enter\", onEnter);\n  panorama.add(\n    meterInfospot,\n    valveInfospot,\n    seatInfospot,\n    topboxInfospot,\n    endingInfospot\n  );\n\n  // Viewer\n  viewer = new PANOLENS.Viewer({\n    controlBar: false,\n    initialLookAt: new THREE.Vector3(0, 0, 5000),\n  });\n  viewer.OrbitControls.enabled = false;\n  viewer.add(panorama);\n  return (\n    <div>\n      <div dangerouslySetInnerHTML={createMarkup()} />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}