{"ast":null,"code":"var _jsxFileName = \"/Users/bcraig/Desktop/test/src/pages/Guided.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport Typed from \"typed.js\"; // import * as TYPED from \"typed\";\n\nimport one from \"../assets/spheres/one.jpg\"; // import two from \"../assets/spheres/two.jpg\";\n// import three from \"../assets/spheres/three.jpg\";\n// import four from \"../assets/spheres/four.jpg\";\n// import five from \"../assets/spheres/five.jpg\";\n// import six from \"../assets/spheres/six.jpg\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Guided() {\n  _s();\n\n  const [progressEl, setProgessEl] = useState(null);\n  const spanEl = useRef(null);\n  var panorama, viewer, typed;\n  var meterInfospot, valveInfospot, seatInfospot, topboxInfospot, endingInfospot;\n  useEffect(() => {\n    setProgessEl(document.querySelector(\"#progress\"));\n  }, [setProgessEl]);\n  var tweeningDelay = 300,\n      typeStartDelay = 1000,\n      typeSpeed = 50;\n  var paragraphs = {\n    welcome: [\"Panolens Presents\", \"A Journey to a <strong>Train</strong>\", \"Here we go\"],\n    meter: [\"One of the common meter that you can see on a train\", \"it is not specially eye-catching but it just can get your attention\", \"it indicates how fast the train is currently going\", \"Let us continue\"],\n    valve: [\"A Valve\", \"solid looking and quite decent color\", \"here shows the evidence that time would leaves marks on everything\", \"same thing applies to our face...\"],\n    seat: [\"Alright. Here we have a seat. The green pad looks quite comfortable\", \"when you are on a train\", \"OK. Move on to next one\"],\n    box: [\"There is a box over there\", \"probably some fuse or electronic devices\", \"Hmmmm............\", \"Anyway\", \"Let's keep moving\"],\n    ending: [\"This is our last stop\", \"Please continue your journey with this wonder train...\"]\n  }; // Patch for typed.js of cutting back-to-back words\n\n  for (var section in paragraphs) {\n    if (paragraphs.hasOwnProperty(section)) {\n      paragraphs[section].unshift(\"\");\n      paragraphs[section].push(\"\");\n    }\n  }\n\n  function delayExecute(func, delay) {\n    setTimeout(func, delay);\n  }\n\n  function onLoad() {\n    type(paragraphs.welcome, onWelcomeComplete, 2000);\n  }\n\n  function onEnter(event) {\n    if (progressEl) {\n      progressEl.style.width = 0;\n      progressEl.classList.remove(\"finish\");\n    }\n  }\n\n  function onProgress(event) {\n    var progress = event.progress.loaded / event.progress.total * 100;\n\n    if (progressEl) {\n      progressEl.style.width = progress + \"%\";\n\n      if (progress === 100) {\n        progressEl.classList.add(\"finish\");\n      }\n    }\n  }\n\n  function onWelcomeComplete() {\n    delayExecute(meterInfospot.focus.bind(meterInfospot), tweeningDelay);\n    type(paragraphs.meter, onMeterTourComplete);\n  }\n\n  function onMeterTourComplete() {\n    delayExecute(valveInfospot.focus.bind(valveInfospot), tweeningDelay);\n    type(paragraphs.valve, onValveTourComplete);\n  }\n\n  function onValveTourComplete() {\n    delayExecute(seatInfospot.focus.bind(seatInfospot), tweeningDelay);\n    type(paragraphs.seat, onSeatTourComplete);\n  }\n\n  function onSeatTourComplete() {\n    delayExecute(topboxInfospot.focus.bind(topboxInfospot), tweeningDelay);\n    type(paragraphs.box, onTopboxTourComplete);\n  }\n\n  function onTopboxTourComplete() {\n    delayExecute(endingInfospot.focus.bind(endingInfospot), tweeningDelay);\n    type(paragraphs.ending, function () {\n      viewer.OrbitControls.enabled = true;\n    });\n  }\n\n  function type(stringArray, onComplete, startDelay) {\n    onComplete = onComplete || function () {};\n\n    startDelay = startDelay >= 0 ? startDelay : typeStartDelay;\n    const options = {\n      strings: stringArray,\n      typeSpeed: 50,\n      backSpeed: 50\n    }; // console.log(spanEl.current);\n\n    if (spanEl.current) {\n      console.log(spanEl.current);\n    }\n\n    typed = new Typed(spanEl.current, options); // typed = new Typed(\"#typed\", {\n    //   strings: stringArray,\n    //   typeSpeed: typeSpeed,\n    //   showCursor: false,\n    // startDelay: startDelay,\n    // onComplete: onComplete,\n    // });\n  } // Infospots\n\n\n  meterInfospot = new PANOLENS.Infospot();\n  valveInfospot = new PANOLENS.Infospot();\n  seatInfospot = new PANOLENS.Infospot();\n  topboxInfospot = new PANOLENS.Infospot();\n  endingInfospot = new PANOLENS.Infospot(10e-7); // Make it not visible\n\n  meterInfospot.position.set(4610.04, 1280.07, 1431.29);\n  valveInfospot.position.set(4637.61, -798.12, -1671.24);\n  seatInfospot.position.set(1934.61, -2611.69, -3792.91);\n  topboxInfospot.position.set(-3348.82, 3705.92, 45.54);\n  endingInfospot.position.set(-3461.4, -3592.37, -241.38);\n  meterInfospot.addHoverText(\"Speedometer\", 50);\n  valveInfospot.addHoverText(\"Valve\", 50);\n  seatInfospot.addHoverText(\"Seat\", 50);\n  topboxInfospot.addHoverText(\"Box\", 50); // Panorama\n\n  panorama = new PANOLENS.ImagePanorama(one);\n  panorama.addEventListener(\"progress\", onProgress);\n  panorama.addEventListener(\"load\", onLoad);\n  panorama.addEventListener(\"enter\", onEnter);\n  panorama.add(meterInfospot, valveInfospot, seatInfospot, topboxInfospot, endingInfospot); // Viewer\n\n  viewer = new PANOLENS.Viewer({\n    controlBar: false,\n    initialLookAt: new THREE.Vector3(0, 0, 5000)\n  });\n  viewer.OrbitControls.enabled = false;\n  viewer.add(panorama);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"type-wrap\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          whiteSpace: \"pre\"\n        } // ref={(el) => {\n        //   this.el = el;\n        // }}\n        ,\n        ref: spanEl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Guided, \"Lh/AherliVfZs8ay4GFFt9m5sLc=\");\n\n_c = Guided;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guided\");","map":{"version":3,"sources":["/Users/bcraig/Desktop/test/src/pages/Guided.js"],"names":["React","useEffect","useState","useRef","PANOLENS","THREE","Typed","one","Guided","progressEl","setProgessEl","spanEl","panorama","viewer","typed","meterInfospot","valveInfospot","seatInfospot","topboxInfospot","endingInfospot","document","querySelector","tweeningDelay","typeStartDelay","typeSpeed","paragraphs","welcome","meter","valve","seat","box","ending","section","hasOwnProperty","unshift","push","delayExecute","func","delay","setTimeout","onLoad","type","onWelcomeComplete","onEnter","event","style","width","classList","remove","onProgress","progress","loaded","total","add","focus","bind","onMeterTourComplete","onValveTourComplete","onSeatTourComplete","onTopboxTourComplete","OrbitControls","enabled","stringArray","onComplete","startDelay","options","strings","backSpeed","current","console","log","Infospot","position","set","addHoverText","ImagePanorama","addEventListener","Viewer","controlBar","initialLookAt","Vector3","whiteSpace"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport Typed from \"typed.js\";\n// import * as TYPED from \"typed\";\nimport one from \"../assets/spheres/one.jpg\";\n// import two from \"../assets/spheres/two.jpg\";\n// import three from \"../assets/spheres/three.jpg\";\n// import four from \"../assets/spheres/four.jpg\";\n// import five from \"../assets/spheres/five.jpg\";\n// import six from \"../assets/spheres/six.jpg\";\n\nexport default function Guided() {\n  const [progressEl, setProgessEl] = useState(null);\n  const spanEl = useRef(null);\n\n  var panorama, viewer, typed;\n\n  var meterInfospot,\n    valveInfospot,\n    seatInfospot,\n    topboxInfospot,\n    endingInfospot;\n\n  useEffect(() => {\n    setProgessEl(document.querySelector(\"#progress\"));\n  }, [setProgessEl]);\n\n  var tweeningDelay = 300,\n    typeStartDelay = 1000,\n    typeSpeed = 50;\n\n  var paragraphs = {\n    welcome: [\n      \"Panolens Presents\",\n      \"A Journey to a <strong>Train</strong>\",\n      \"Here we go\",\n    ],\n    meter: [\n      \"One of the common meter that you can see on a train\",\n      \"it is not specially eye-catching but it just can get your attention\",\n      \"it indicates how fast the train is currently going\",\n      \"Let us continue\",\n    ],\n    valve: [\n      \"A Valve\",\n      \"solid looking and quite decent color\",\n      \"here shows the evidence that time would leaves marks on everything\",\n      \"same thing applies to our face...\",\n    ],\n    seat: [\n      \"Alright. Here we have a seat. The green pad looks quite comfortable\",\n      \"when you are on a train\",\n      \"OK. Move on to next one\",\n    ],\n    box: [\n      \"There is a box over there\",\n      \"probably some fuse or electronic devices\",\n      \"Hmmmm............\",\n      \"Anyway\",\n      \"Let's keep moving\",\n    ],\n    ending: [\n      \"This is our last stop\",\n      \"Please continue your journey with this wonder train...\",\n    ],\n  };\n\n  // Patch for typed.js of cutting back-to-back words\n  for (var section in paragraphs) {\n    if (paragraphs.hasOwnProperty(section)) {\n      paragraphs[section].unshift(\"\");\n      paragraphs[section].push(\"\");\n    }\n  }\n\n  function delayExecute(func, delay) {\n    setTimeout(func, delay);\n  }\n\n  function onLoad() {\n    type(paragraphs.welcome, onWelcomeComplete, 2000);\n  }\n\n  function onEnter(event) {\n    if (progressEl) {\n      progressEl.style.width = 0;\n      progressEl.classList.remove(\"finish\");\n    }\n  }\n\n  function onProgress(event) {\n    var progress = (event.progress.loaded / event.progress.total) * 100;\n    if (progressEl) {\n      progressEl.style.width = progress + \"%\";\n      if (progress === 100) {\n        progressEl.classList.add(\"finish\");\n      }\n    }\n  }\n\n  function onWelcomeComplete() {\n    delayExecute(meterInfospot.focus.bind(meterInfospot), tweeningDelay);\n    type(paragraphs.meter, onMeterTourComplete);\n  }\n\n  function onMeterTourComplete() {\n    delayExecute(valveInfospot.focus.bind(valveInfospot), tweeningDelay);\n    type(paragraphs.valve, onValveTourComplete);\n  }\n\n  function onValveTourComplete() {\n    delayExecute(seatInfospot.focus.bind(seatInfospot), tweeningDelay);\n    type(paragraphs.seat, onSeatTourComplete);\n  }\n\n  function onSeatTourComplete() {\n    delayExecute(topboxInfospot.focus.bind(topboxInfospot), tweeningDelay);\n    type(paragraphs.box, onTopboxTourComplete);\n  }\n\n  function onTopboxTourComplete() {\n    delayExecute(endingInfospot.focus.bind(endingInfospot), tweeningDelay);\n    type(paragraphs.ending, function () {\n      viewer.OrbitControls.enabled = true;\n    });\n  }\n\n  function type(stringArray, onComplete, startDelay) {\n    onComplete = onComplete || function () {};\n    startDelay = startDelay >= 0 ? startDelay : typeStartDelay;\n\n    const options = {\n      strings: stringArray,\n      typeSpeed: 50,\n      backSpeed: 50,\n    };\n    // console.log(spanEl.current);\n    if (spanEl.current) {\n      console.log(spanEl.current);\n    }\n    typed = new Typed(spanEl.current, options);\n\n    // typed = new Typed(\"#typed\", {\n    //   strings: stringArray,\n    //   typeSpeed: typeSpeed,\n    //   showCursor: false,\n    // startDelay: startDelay,\n    // onComplete: onComplete,\n    // });\n  }\n\n  // Infospots\n  meterInfospot = new PANOLENS.Infospot();\n  valveInfospot = new PANOLENS.Infospot();\n  seatInfospot = new PANOLENS.Infospot();\n  topboxInfospot = new PANOLENS.Infospot();\n  endingInfospot = new PANOLENS.Infospot(10e-7); // Make it not visible\n\n  meterInfospot.position.set(4610.04, 1280.07, 1431.29);\n  valveInfospot.position.set(4637.61, -798.12, -1671.24);\n  seatInfospot.position.set(1934.61, -2611.69, -3792.91);\n  topboxInfospot.position.set(-3348.82, 3705.92, 45.54);\n  endingInfospot.position.set(-3461.4, -3592.37, -241.38);\n\n  meterInfospot.addHoverText(\"Speedometer\", 50);\n  valveInfospot.addHoverText(\"Valve\", 50);\n  seatInfospot.addHoverText(\"Seat\", 50);\n  topboxInfospot.addHoverText(\"Box\", 50);\n\n  // Panorama\n  panorama = new PANOLENS.ImagePanorama(one);\n  panorama.addEventListener(\"progress\", onProgress);\n  panorama.addEventListener(\"load\", onLoad);\n  panorama.addEventListener(\"enter\", onEnter);\n  panorama.add(\n    meterInfospot,\n    valveInfospot,\n    seatInfospot,\n    topboxInfospot,\n    endingInfospot\n  );\n\n  // Viewer\n  viewer = new PANOLENS.Viewer({\n    controlBar: false,\n    initialLookAt: new THREE.Vector3(0, 0, 5000),\n  });\n  viewer.OrbitControls.enabled = false;\n  viewer.add(panorama);\n\n  return (\n    <div>\n      <div className=\"type-wrap\">\n        <span\n          style={{ whiteSpace: \"pre\" }}\n          // ref={(el) => {\n          //   this.el = el;\n          // }}\n          ref={spanEl}\n        />\n      </div>\n      <div id=\"progress\"></div>\n      {/* <div id=\"dialog\">\n        <div id=\"typed\">Hello</div>\n      </div> */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}