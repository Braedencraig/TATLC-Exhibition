{"ast":null,"code":"import { _Math } from './Math.js';\nimport { Quaternion } from './Quaternion.js';\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3(x, y, z) {\n  this.x = x || 0;\n  this.y = y || 0;\n  this.z = z || 0;\n}\n\nObject.assign(Vector3.prototype, {\n  isVector3: true,\n  set: function (x, y, z) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    return this;\n  },\n  setScalar: function (scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    return this;\n  },\n  setX: function (x) {\n    this.x = x;\n    return this;\n  },\n  setY: function (y) {\n    this.y = y;\n    return this;\n  },\n  setZ: function (z) {\n    this.z = z;\n    return this;\n  },\n  setComponent: function (index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n\n      case 1:\n        this.y = value;\n        break;\n\n      case 2:\n        this.z = value;\n        break;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n\n    return this;\n  },\n  getComponent: function (index) {\n    switch (index) {\n      case 0:\n        return this.x;\n\n      case 1:\n        return this.y;\n\n      case 2:\n        return this.z;\n\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  },\n  clone: function () {\n    return new this.constructor(this.x, this.y, this.z);\n  },\n  copy: function (v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    return this;\n  },\n  add: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n      return this.addVectors(v, w);\n    }\n\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    return this;\n  },\n  addScalar: function (s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    return this;\n  },\n  addVectors: function (a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    return this;\n  },\n  addScaledVector: function (v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    return this;\n  },\n  sub: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n      return this.subVectors(v, w);\n    }\n\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    return this;\n  },\n  subScalar: function (s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    return this;\n  },\n  subVectors: function (a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    return this;\n  },\n  multiply: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n      return this.multiplyVectors(v, w);\n    }\n\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    return this;\n  },\n  multiplyScalar: function (scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    return this;\n  },\n  multiplyVectors: function (a, b) {\n    this.x = a.x * b.x;\n    this.y = a.y * b.y;\n    this.z = a.z * b.z;\n    return this;\n  },\n  applyEuler: function () {\n    var quaternion = new Quaternion();\n    return function applyEuler(euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      return this.applyQuaternion(quaternion.setFromEuler(euler));\n    };\n  }(),\n  applyAxisAngle: function () {\n    var quaternion = new Quaternion();\n    return function applyAxisAngle(axis, angle) {\n      return this.applyQuaternion(quaternion.setFromAxisAngle(axis, angle));\n    };\n  }(),\n  applyMatrix3: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6] * z;\n    this.y = e[1] * x + e[4] * y + e[7] * z;\n    this.z = e[2] * x + e[5] * y + e[8] * z;\n    return this;\n  },\n  applyMatrix4: function (m) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n    this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n    this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n    this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n    return this;\n  },\n  applyQuaternion: function (q) {\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var qx = q.x,\n        qy = q.y,\n        qz = q.z,\n        qw = q.w; // calculate quat * vector\n\n    var ix = qw * x + qy * z - qz * y;\n    var iy = qw * y + qz * x - qx * z;\n    var iz = qw * z + qx * y - qy * x;\n    var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n    this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n    this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n    this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n    return this;\n  },\n  project: function (camera) {\n    return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n  },\n  unproject: function (camera) {\n    return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n  },\n  transformDirection: function (m) {\n    // input: THREE.Matrix4 affine matrix\n    // vector interpreted as a direction\n    var x = this.x,\n        y = this.y,\n        z = this.z;\n    var e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z;\n    this.y = e[1] * x + e[5] * y + e[9] * z;\n    this.z = e[2] * x + e[6] * y + e[10] * z;\n    return this.normalize();\n  },\n  divide: function (v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    this.z /= v.z;\n    return this;\n  },\n  divideScalar: function (scalar) {\n    return this.multiplyScalar(1 / scalar);\n  },\n  min: function (v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    return this;\n  },\n  max: function (v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    return this;\n  },\n  clamp: function (min, max) {\n    // assumes min < max, componentwise\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    return this;\n  },\n  clampScalar: function (minVal, maxVal) {\n    this.x = Math.max(minVal, Math.min(maxVal, this.x));\n    this.y = Math.max(minVal, Math.min(maxVal, this.y));\n    this.z = Math.max(minVal, Math.min(maxVal, this.z));\n    return this;\n  },\n  clampLength: function (min, max) {\n    var length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  },\n  floor: function () {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    return this;\n  },\n  ceil: function () {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    return this;\n  },\n  round: function () {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    return this;\n  },\n  roundToZero: function () {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    return this;\n  },\n  negate: function () {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    return this;\n  },\n  dot: function (v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z;\n  },\n  // TODO lengthSquared?\n  lengthSq: function () {\n    return this.x * this.x + this.y * this.y + this.z * this.z;\n  },\n  length: function () {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n  },\n  manhattanLength: function () {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n  },\n  normalize: function () {\n    return this.divideScalar(this.length() || 1);\n  },\n  setLength: function (length) {\n    return this.normalize().multiplyScalar(length);\n  },\n  lerp: function (v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    return this;\n  },\n  lerpVectors: function (v1, v2, alpha) {\n    return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n  },\n  cross: function (v, w) {\n    if (w !== undefined) {\n      console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n      return this.crossVectors(v, w);\n    }\n\n    return this.crossVectors(this, v);\n  },\n  crossVectors: function (a, b) {\n    var ax = a.x,\n        ay = a.y,\n        az = a.z;\n    var bx = b.x,\n        by = b.y,\n        bz = b.z;\n    this.x = ay * bz - az * by;\n    this.y = az * bx - ax * bz;\n    this.z = ax * by - ay * bx;\n    return this;\n  },\n  projectOnVector: function (vector) {\n    var scalar = vector.dot(this) / vector.lengthSq();\n    return this.copy(vector).multiplyScalar(scalar);\n  },\n  projectOnPlane: function () {\n    var v1 = new Vector3();\n    return function projectOnPlane(planeNormal) {\n      v1.copy(this).projectOnVector(planeNormal);\n      return this.sub(v1);\n    };\n  }(),\n  reflect: function () {\n    // reflect incident vector off plane orthogonal to normal\n    // normal is assumed to have unit length\n    var v1 = new Vector3();\n    return function reflect(normal) {\n      return this.sub(v1.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    };\n  }(),\n  angleTo: function (v) {\n    var theta = this.dot(v) / Math.sqrt(this.lengthSq() * v.lengthSq()); // clamp, to handle numerical problems\n\n    return Math.acos(_Math.clamp(theta, -1, 1));\n  },\n  distanceTo: function (v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  },\n  distanceToSquared: function (v) {\n    var dx = this.x - v.x,\n        dy = this.y - v.y,\n        dz = this.z - v.z;\n    return dx * dx + dy * dy + dz * dz;\n  },\n  manhattanDistanceTo: function (v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n  },\n  setFromSpherical: function (s) {\n    return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n  },\n  setFromSphericalCoords: function (radius, phi, theta) {\n    var sinPhiRadius = Math.sin(phi) * radius;\n    this.x = sinPhiRadius * Math.sin(theta);\n    this.y = Math.cos(phi) * radius;\n    this.z = sinPhiRadius * Math.cos(theta);\n    return this;\n  },\n  setFromCylindrical: function (c) {\n    return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n  },\n  setFromCylindricalCoords: function (radius, theta, y) {\n    this.x = radius * Math.sin(theta);\n    this.y = y;\n    this.z = radius * Math.cos(theta);\n    return this;\n  },\n  setFromMatrixPosition: function (m) {\n    var e = m.elements;\n    this.x = e[12];\n    this.y = e[13];\n    this.z = e[14];\n    return this;\n  },\n  setFromMatrixScale: function (m) {\n    var sx = this.setFromMatrixColumn(m, 0).length();\n    var sy = this.setFromMatrixColumn(m, 1).length();\n    var sz = this.setFromMatrixColumn(m, 2).length();\n    this.x = sx;\n    this.y = sy;\n    this.z = sz;\n    return this;\n  },\n  setFromMatrixColumn: function (m, index) {\n    return this.fromArray(m.elements, index * 4);\n  },\n  equals: function (v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z;\n  },\n  fromArray: function (array, offset) {\n    if (offset === undefined) offset = 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    return this;\n  },\n  toArray: function (array, offset) {\n    if (array === undefined) array = [];\n    if (offset === undefined) offset = 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    return array;\n  },\n  fromBufferAttribute: function (attribute, index, offset) {\n    if (offset !== undefined) {\n      console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n    }\n\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    return this;\n  }\n});\nexport { Vector3 };","map":{"version":3,"sources":["/Users/bcraig/Desktop/TATLC/node_modules/three/src/math/Vector3.js"],"names":["_Math","Quaternion","Vector3","x","y","z","Object","assign","prototype","isVector3","set","setScalar","scalar","setX","setY","setZ","setComponent","index","value","Error","getComponent","clone","constructor","copy","v","add","w","undefined","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyVectors","multiplyScalar","applyEuler","quaternion","euler","isEuler","error","applyQuaternion","setFromEuler","applyAxisAngle","axis","angle","setFromAxisAngle","applyMatrix3","m","e","elements","applyMatrix4","q","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","normalize","divide","divideScalar","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","setLength","lerp","alpha","lerpVectors","v1","v2","cross","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","vector","projectOnPlane","planeNormal","reflect","normal","angleTo","theta","acos","distanceTo","distanceToSquared","dx","dy","dz","manhattanDistanceTo","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","sin","cos","setFromCylindrical","c","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","fromArray","equals","array","offset","toArray","fromBufferAttribute","attribute","getX","getY","getZ"],"mappings":"AAAA,SAASA,KAAT,QAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,iBAA3B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,OAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAwBC,CAAxB,EAA4B;AAE3B,OAAKF,CAAL,GAASA,CAAC,IAAI,CAAd;AACA,OAAKC,CAAL,GAASA,CAAC,IAAI,CAAd;AACA,OAAKC,CAAL,GAASA,CAAC,IAAI,CAAd;AAEA;;AAEDC,MAAM,CAACC,MAAP,CAAeL,OAAO,CAACM,SAAvB,EAAkC;AAEjCC,EAAAA,SAAS,EAAE,IAFsB;AAIjCC,EAAAA,GAAG,EAAE,UAAWP,CAAX,EAAcC,CAAd,EAAiBC,CAAjB,EAAqB;AAEzB,SAAKF,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAASA,CAAT;AAEA,WAAO,IAAP;AAEA,GAZgC;AAcjCM,EAAAA,SAAS,EAAE,UAAWC,MAAX,EAAoB;AAE9B,SAAKT,CAAL,GAASS,MAAT;AACA,SAAKR,CAAL,GAASQ,MAAT;AACA,SAAKP,CAAL,GAASO,MAAT;AAEA,WAAO,IAAP;AAEA,GAtBgC;AAwBjCC,EAAAA,IAAI,EAAE,UAAWV,CAAX,EAAe;AAEpB,SAAKA,CAAL,GAASA,CAAT;AAEA,WAAO,IAAP;AAEA,GA9BgC;AAgCjCW,EAAAA,IAAI,EAAE,UAAWV,CAAX,EAAe;AAEpB,SAAKA,CAAL,GAASA,CAAT;AAEA,WAAO,IAAP;AAEA,GAtCgC;AAwCjCW,EAAAA,IAAI,EAAE,UAAWV,CAAX,EAAe;AAEpB,SAAKA,CAAL,GAASA,CAAT;AAEA,WAAO,IAAP;AAEA,GA9CgC;AAgDjCW,EAAAA,YAAY,EAAE,UAAWC,KAAX,EAAkBC,KAAlB,EAA0B;AAEvC,YAASD,KAAT;AAEC,WAAK,CAAL;AAAQ,aAAKd,CAAL,GAASe,KAAT;AAAgB;;AACxB,WAAK,CAAL;AAAQ,aAAKd,CAAL,GAASc,KAAT;AAAgB;;AACxB,WAAK,CAAL;AAAQ,aAAKb,CAAL,GAASa,KAAT;AAAgB;;AACxB;AAAS,cAAM,IAAIC,KAAJ,CAAW,4BAA4BF,KAAvC,CAAN;AALV;;AASA,WAAO,IAAP;AAEA,GA7DgC;AA+DjCG,EAAAA,YAAY,EAAE,UAAWH,KAAX,EAAmB;AAEhC,YAASA,KAAT;AAEC,WAAK,CAAL;AAAQ,eAAO,KAAKd,CAAZ;;AACR,WAAK,CAAL;AAAQ,eAAO,KAAKC,CAAZ;;AACR,WAAK,CAAL;AAAQ,eAAO,KAAKC,CAAZ;;AACR;AAAS,cAAM,IAAIc,KAAJ,CAAW,4BAA4BF,KAAvC,CAAN;AALV;AASA,GA1EgC;AA4EjCI,EAAAA,KAAK,EAAE,YAAY;AAElB,WAAO,IAAI,KAAKC,WAAT,CAAsB,KAAKnB,CAA3B,EAA8B,KAAKC,CAAnC,EAAsC,KAAKC,CAA3C,CAAP;AAEA,GAhFgC;AAkFjCkB,EAAAA,IAAI,EAAE,UAAWC,CAAX,EAAe;AAEpB,SAAKrB,CAAL,GAASqB,CAAC,CAACrB,CAAX;AACA,SAAKC,CAAL,GAASoB,CAAC,CAACpB,CAAX;AACA,SAAKC,CAAL,GAASmB,CAAC,CAACnB,CAAX;AAEA,WAAO,IAAP;AAEA,GA1FgC;AA4FjCoB,EAAAA,GAAG,EAAE,UAAWD,CAAX,EAAcE,CAAd,EAAkB;AAEtB,QAAKA,CAAC,KAAKC,SAAX,EAAuB;AAEtBC,MAAAA,OAAO,CAACC,IAAR,CAAc,uFAAd;AACA,aAAO,KAAKC,UAAL,CAAiBN,CAAjB,EAAoBE,CAApB,CAAP;AAEA;;AAED,SAAKvB,CAAL,IAAUqB,CAAC,CAACrB,CAAZ;AACA,SAAKC,CAAL,IAAUoB,CAAC,CAACpB,CAAZ;AACA,SAAKC,CAAL,IAAUmB,CAAC,CAACnB,CAAZ;AAEA,WAAO,IAAP;AAEA,GA3GgC;AA6GjC0B,EAAAA,SAAS,EAAE,UAAWC,CAAX,EAAe;AAEzB,SAAK7B,CAAL,IAAU6B,CAAV;AACA,SAAK5B,CAAL,IAAU4B,CAAV;AACA,SAAK3B,CAAL,IAAU2B,CAAV;AAEA,WAAO,IAAP;AAEA,GArHgC;AAuHjCF,EAAAA,UAAU,EAAE,UAAWG,CAAX,EAAcC,CAAd,EAAkB;AAE7B,SAAK/B,CAAL,GAAS8B,CAAC,CAAC9B,CAAF,GAAM+B,CAAC,CAAC/B,CAAjB;AACA,SAAKC,CAAL,GAAS6B,CAAC,CAAC7B,CAAF,GAAM8B,CAAC,CAAC9B,CAAjB;AACA,SAAKC,CAAL,GAAS4B,CAAC,CAAC5B,CAAF,GAAM6B,CAAC,CAAC7B,CAAjB;AAEA,WAAO,IAAP;AAEA,GA/HgC;AAiIjC8B,EAAAA,eAAe,EAAE,UAAWX,CAAX,EAAcQ,CAAd,EAAkB;AAElC,SAAK7B,CAAL,IAAUqB,CAAC,CAACrB,CAAF,GAAM6B,CAAhB;AACA,SAAK5B,CAAL,IAAUoB,CAAC,CAACpB,CAAF,GAAM4B,CAAhB;AACA,SAAK3B,CAAL,IAAUmB,CAAC,CAACnB,CAAF,GAAM2B,CAAhB;AAEA,WAAO,IAAP;AAEA,GAzIgC;AA2IjCI,EAAAA,GAAG,EAAE,UAAWZ,CAAX,EAAcE,CAAd,EAAkB;AAEtB,QAAKA,CAAC,KAAKC,SAAX,EAAuB;AAEtBC,MAAAA,OAAO,CAACC,IAAR,CAAc,uFAAd;AACA,aAAO,KAAKQ,UAAL,CAAiBb,CAAjB,EAAoBE,CAApB,CAAP;AAEA;;AAED,SAAKvB,CAAL,IAAUqB,CAAC,CAACrB,CAAZ;AACA,SAAKC,CAAL,IAAUoB,CAAC,CAACpB,CAAZ;AACA,SAAKC,CAAL,IAAUmB,CAAC,CAACnB,CAAZ;AAEA,WAAO,IAAP;AAEA,GA1JgC;AA4JjCiC,EAAAA,SAAS,EAAE,UAAWN,CAAX,EAAe;AAEzB,SAAK7B,CAAL,IAAU6B,CAAV;AACA,SAAK5B,CAAL,IAAU4B,CAAV;AACA,SAAK3B,CAAL,IAAU2B,CAAV;AAEA,WAAO,IAAP;AAEA,GApKgC;AAsKjCK,EAAAA,UAAU,EAAE,UAAWJ,CAAX,EAAcC,CAAd,EAAkB;AAE7B,SAAK/B,CAAL,GAAS8B,CAAC,CAAC9B,CAAF,GAAM+B,CAAC,CAAC/B,CAAjB;AACA,SAAKC,CAAL,GAAS6B,CAAC,CAAC7B,CAAF,GAAM8B,CAAC,CAAC9B,CAAjB;AACA,SAAKC,CAAL,GAAS4B,CAAC,CAAC5B,CAAF,GAAM6B,CAAC,CAAC7B,CAAjB;AAEA,WAAO,IAAP;AAEA,GA9KgC;AAgLjCkC,EAAAA,QAAQ,EAAE,UAAWf,CAAX,EAAcE,CAAd,EAAkB;AAE3B,QAAKA,CAAC,KAAKC,SAAX,EAAuB;AAEtBC,MAAAA,OAAO,CAACC,IAAR,CAAc,iGAAd;AACA,aAAO,KAAKW,eAAL,CAAsBhB,CAAtB,EAAyBE,CAAzB,CAAP;AAEA;;AAED,SAAKvB,CAAL,IAAUqB,CAAC,CAACrB,CAAZ;AACA,SAAKC,CAAL,IAAUoB,CAAC,CAACpB,CAAZ;AACA,SAAKC,CAAL,IAAUmB,CAAC,CAACnB,CAAZ;AAEA,WAAO,IAAP;AAEA,GA/LgC;AAiMjCoC,EAAAA,cAAc,EAAE,UAAW7B,MAAX,EAAoB;AAEnC,SAAKT,CAAL,IAAUS,MAAV;AACA,SAAKR,CAAL,IAAUQ,MAAV;AACA,SAAKP,CAAL,IAAUO,MAAV;AAEA,WAAO,IAAP;AAEA,GAzMgC;AA2MjC4B,EAAAA,eAAe,EAAE,UAAWP,CAAX,EAAcC,CAAd,EAAkB;AAElC,SAAK/B,CAAL,GAAS8B,CAAC,CAAC9B,CAAF,GAAM+B,CAAC,CAAC/B,CAAjB;AACA,SAAKC,CAAL,GAAS6B,CAAC,CAAC7B,CAAF,GAAM8B,CAAC,CAAC9B,CAAjB;AACA,SAAKC,CAAL,GAAS4B,CAAC,CAAC5B,CAAF,GAAM6B,CAAC,CAAC7B,CAAjB;AAEA,WAAO,IAAP;AAEA,GAnNgC;AAqNjCqC,EAAAA,UAAU,EAAE,YAAY;AAEvB,QAAIC,UAAU,GAAG,IAAI1C,UAAJ,EAAjB;AAEA,WAAO,SAASyC,UAAT,CAAqBE,KAArB,EAA6B;AAEnC,UAAK,EAAIA,KAAK,IAAIA,KAAK,CAACC,OAAnB,CAAL,EAAoC;AAEnCjB,QAAAA,OAAO,CAACkB,KAAR,CAAe,6FAAf;AAEA;;AAED,aAAO,KAAKC,eAAL,CAAsBJ,UAAU,CAACK,YAAX,CAAyBJ,KAAzB,CAAtB,CAAP;AAEA,KAVD;AAYA,GAhBW,EArNqB;AAuOjCK,EAAAA,cAAc,EAAE,YAAY;AAE3B,QAAIN,UAAU,GAAG,IAAI1C,UAAJ,EAAjB;AAEA,WAAO,SAASgD,cAAT,CAAyBC,IAAzB,EAA+BC,KAA/B,EAAuC;AAE7C,aAAO,KAAKJ,eAAL,CAAsBJ,UAAU,CAACS,gBAAX,CAA6BF,IAA7B,EAAmCC,KAAnC,CAAtB,CAAP;AAEA,KAJD;AAMA,GAVe,EAvOiB;AAmPjCE,EAAAA,YAAY,EAAE,UAAWC,CAAX,EAAe;AAE5B,QAAInD,CAAC,GAAG,KAAKA,CAAb;AAAA,QAAgBC,CAAC,GAAG,KAAKA,CAAzB;AAAA,QAA4BC,CAAC,GAAG,KAAKA,CAArC;AACA,QAAIkD,CAAC,GAAGD,CAAC,CAACE,QAAV;AAEA,SAAKrD,CAAL,GAASoD,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,CAAF,CAAD,GAASlD,CAA5C;AACA,SAAKD,CAAL,GAASmD,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,CAAF,CAAD,GAASlD,CAA5C;AACA,SAAKA,CAAL,GAASkD,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,CAAF,CAAD,GAASlD,CAA5C;AAEA,WAAO,IAAP;AAEA,GA9PgC;AAgQjCoD,EAAAA,YAAY,EAAE,UAAWH,CAAX,EAAe;AAE5B,QAAInD,CAAC,GAAG,KAAKA,CAAb;AAAA,QAAgBC,CAAC,GAAG,KAAKA,CAAzB;AAAA,QAA4BC,CAAC,GAAG,KAAKA,CAArC;AACA,QAAIkD,CAAC,GAAGD,CAAC,CAACE,QAAV;AAEA,QAAI9B,CAAC,GAAG,KAAM6B,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,EAAF,CAAD,GAAUlD,CAApC,GAAwCkD,CAAC,CAAE,EAAF,CAA/C,CAAR;AAEA,SAAKpD,CAAL,GAAS,CAAEoD,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,CAAF,CAAD,GAASlD,CAAnC,GAAuCkD,CAAC,CAAE,EAAF,CAA1C,IAAqD7B,CAA9D;AACA,SAAKtB,CAAL,GAAS,CAAEmD,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,CAAF,CAAD,GAASlD,CAAnC,GAAuCkD,CAAC,CAAE,EAAF,CAA1C,IAAqD7B,CAA9D;AACA,SAAKrB,CAAL,GAAS,CAAEkD,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,EAAF,CAAD,GAAUlD,CAApC,GAAwCkD,CAAC,CAAE,EAAF,CAA3C,IAAsD7B,CAA/D;AAEA,WAAO,IAAP;AAEA,GA7QgC;AA+QjCqB,EAAAA,eAAe,EAAE,UAAWW,CAAX,EAAe;AAE/B,QAAIvD,CAAC,GAAG,KAAKA,CAAb;AAAA,QAAgBC,CAAC,GAAG,KAAKA,CAAzB;AAAA,QAA4BC,CAAC,GAAG,KAAKA,CAArC;AACA,QAAIsD,EAAE,GAAGD,CAAC,CAACvD,CAAX;AAAA,QAAcyD,EAAE,GAAGF,CAAC,CAACtD,CAArB;AAAA,QAAwByD,EAAE,GAAGH,CAAC,CAACrD,CAA/B;AAAA,QAAkCyD,EAAE,GAAGJ,CAAC,CAAChC,CAAzC,CAH+B,CAK/B;;AAEA,QAAIqC,EAAE,GAAGD,EAAE,GAAG3D,CAAL,GAASyD,EAAE,GAAGvD,CAAd,GAAkBwD,EAAE,GAAGzD,CAAhC;AACA,QAAI4D,EAAE,GAAGF,EAAE,GAAG1D,CAAL,GAASyD,EAAE,GAAG1D,CAAd,GAAkBwD,EAAE,GAAGtD,CAAhC;AACA,QAAI4D,EAAE,GAAGH,EAAE,GAAGzD,CAAL,GAASsD,EAAE,GAAGvD,CAAd,GAAkBwD,EAAE,GAAGzD,CAAhC;AACA,QAAI+D,EAAE,GAAG,CAAEP,EAAF,GAAOxD,CAAP,GAAWyD,EAAE,GAAGxD,CAAhB,GAAoByD,EAAE,GAAGxD,CAAlC,CAV+B,CAY/B;;AAEA,SAAKF,CAAL,GAAS4D,EAAE,GAAGD,EAAL,GAAUI,EAAE,GAAG,CAAEP,EAAjB,GAAsBK,EAAE,GAAG,CAAEH,EAA7B,GAAkCI,EAAE,GAAG,CAAEL,EAAlD;AACA,SAAKxD,CAAL,GAAS4D,EAAE,GAAGF,EAAL,GAAUI,EAAE,GAAG,CAAEN,EAAjB,GAAsBK,EAAE,GAAG,CAAEN,EAA7B,GAAkCI,EAAE,GAAG,CAAEF,EAAlD;AACA,SAAKxD,CAAL,GAAS4D,EAAE,GAAGH,EAAL,GAAUI,EAAE,GAAG,CAAEL,EAAjB,GAAsBE,EAAE,GAAG,CAAEH,EAA7B,GAAkCI,EAAE,GAAG,CAAEL,EAAlD;AAEA,WAAO,IAAP;AAEA,GAnSgC;AAqSjCQ,EAAAA,OAAO,EAAE,UAAWC,MAAX,EAAoB;AAE5B,WAAO,KAAKX,YAAL,CAAmBW,MAAM,CAACC,kBAA1B,EAA+CZ,YAA/C,CAA6DW,MAAM,CAACE,gBAApE,CAAP;AAEA,GAzSgC;AA2SjCC,EAAAA,SAAS,EAAE,UAAWH,MAAX,EAAoB;AAE9B,WAAO,KAAKX,YAAL,CAAmBW,MAAM,CAACI,uBAA1B,EAAoDf,YAApD,CAAkEW,MAAM,CAACK,WAAzE,CAAP;AAEA,GA/SgC;AAiTjCC,EAAAA,kBAAkB,EAAE,UAAWpB,CAAX,EAAe;AAElC;AACA;AAEA,QAAInD,CAAC,GAAG,KAAKA,CAAb;AAAA,QAAgBC,CAAC,GAAG,KAAKA,CAAzB;AAAA,QAA4BC,CAAC,GAAG,KAAKA,CAArC;AACA,QAAIkD,CAAC,GAAGD,CAAC,CAACE,QAAV;AAEA,SAAKrD,CAAL,GAASoD,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,CAAF,CAAD,GAASlD,CAA5C;AACA,SAAKD,CAAL,GAASmD,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,CAAF,CAAD,GAASlD,CAA5C;AACA,SAAKA,CAAL,GAASkD,CAAC,CAAE,CAAF,CAAD,GAASpD,CAAT,GAAaoD,CAAC,CAAE,CAAF,CAAD,GAASnD,CAAtB,GAA0BmD,CAAC,CAAE,EAAF,CAAD,GAAUlD,CAA7C;AAEA,WAAO,KAAKsE,SAAL,EAAP;AAEA,GA/TgC;AAiUjCC,EAAAA,MAAM,EAAE,UAAWpD,CAAX,EAAe;AAEtB,SAAKrB,CAAL,IAAUqB,CAAC,CAACrB,CAAZ;AACA,SAAKC,CAAL,IAAUoB,CAAC,CAACpB,CAAZ;AACA,SAAKC,CAAL,IAAUmB,CAAC,CAACnB,CAAZ;AAEA,WAAO,IAAP;AAEA,GAzUgC;AA2UjCwE,EAAAA,YAAY,EAAE,UAAWjE,MAAX,EAAoB;AAEjC,WAAO,KAAK6B,cAAL,CAAqB,IAAI7B,MAAzB,CAAP;AAEA,GA/UgC;AAiVjCkE,EAAAA,GAAG,EAAE,UAAWtD,CAAX,EAAe;AAEnB,SAAKrB,CAAL,GAAS4E,IAAI,CAACD,GAAL,CAAU,KAAK3E,CAAf,EAAkBqB,CAAC,CAACrB,CAApB,CAAT;AACA,SAAKC,CAAL,GAAS2E,IAAI,CAACD,GAAL,CAAU,KAAK1E,CAAf,EAAkBoB,CAAC,CAACpB,CAApB,CAAT;AACA,SAAKC,CAAL,GAAS0E,IAAI,CAACD,GAAL,CAAU,KAAKzE,CAAf,EAAkBmB,CAAC,CAACnB,CAApB,CAAT;AAEA,WAAO,IAAP;AAEA,GAzVgC;AA2VjC2E,EAAAA,GAAG,EAAE,UAAWxD,CAAX,EAAe;AAEnB,SAAKrB,CAAL,GAAS4E,IAAI,CAACC,GAAL,CAAU,KAAK7E,CAAf,EAAkBqB,CAAC,CAACrB,CAApB,CAAT;AACA,SAAKC,CAAL,GAAS2E,IAAI,CAACC,GAAL,CAAU,KAAK5E,CAAf,EAAkBoB,CAAC,CAACpB,CAApB,CAAT;AACA,SAAKC,CAAL,GAAS0E,IAAI,CAACC,GAAL,CAAU,KAAK3E,CAAf,EAAkBmB,CAAC,CAACnB,CAApB,CAAT;AAEA,WAAO,IAAP;AAEA,GAnWgC;AAqWjC4E,EAAAA,KAAK,EAAE,UAAWH,GAAX,EAAgBE,GAAhB,EAAsB;AAE5B;AAEA,SAAK7E,CAAL,GAAS4E,IAAI,CAACC,GAAL,CAAUF,GAAG,CAAC3E,CAAd,EAAiB4E,IAAI,CAACD,GAAL,CAAUE,GAAG,CAAC7E,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AACA,SAAKC,CAAL,GAAS2E,IAAI,CAACC,GAAL,CAAUF,GAAG,CAAC1E,CAAd,EAAiB2E,IAAI,CAACD,GAAL,CAAUE,GAAG,CAAC5E,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AACA,SAAKC,CAAL,GAAS0E,IAAI,CAACC,GAAL,CAAUF,GAAG,CAACzE,CAAd,EAAiB0E,IAAI,CAACD,GAAL,CAAUE,GAAG,CAAC3E,CAAd,EAAiB,KAAKA,CAAtB,CAAjB,CAAT;AAEA,WAAO,IAAP;AAEA,GA/WgC;AAiXjC6E,EAAAA,WAAW,EAAE,UAAWC,MAAX,EAAmBC,MAAnB,EAA4B;AAExC,SAAKjF,CAAL,GAAS4E,IAAI,CAACC,GAAL,CAAUG,MAAV,EAAkBJ,IAAI,CAACD,GAAL,CAAUM,MAAV,EAAkB,KAAKjF,CAAvB,CAAlB,CAAT;AACA,SAAKC,CAAL,GAAS2E,IAAI,CAACC,GAAL,CAAUG,MAAV,EAAkBJ,IAAI,CAACD,GAAL,CAAUM,MAAV,EAAkB,KAAKhF,CAAvB,CAAlB,CAAT;AACA,SAAKC,CAAL,GAAS0E,IAAI,CAACC,GAAL,CAAUG,MAAV,EAAkBJ,IAAI,CAACD,GAAL,CAAUM,MAAV,EAAkB,KAAK/E,CAAvB,CAAlB,CAAT;AAEA,WAAO,IAAP;AAEA,GAzXgC;AA2XjCgF,EAAAA,WAAW,EAAE,UAAWP,GAAX,EAAgBE,GAAhB,EAAsB;AAElC,QAAIM,MAAM,GAAG,KAAKA,MAAL,EAAb;AAEA,WAAO,KAAKT,YAAL,CAAmBS,MAAM,IAAI,CAA7B,EAAiC7C,cAAjC,CAAiDsC,IAAI,CAACC,GAAL,CAAUF,GAAV,EAAeC,IAAI,CAACD,GAAL,CAAUE,GAAV,EAAeM,MAAf,CAAf,CAAjD,CAAP;AAEA,GAjYgC;AAmYjCC,EAAAA,KAAK,EAAE,YAAY;AAElB,SAAKpF,CAAL,GAAS4E,IAAI,CAACQ,KAAL,CAAY,KAAKpF,CAAjB,CAAT;AACA,SAAKC,CAAL,GAAS2E,IAAI,CAACQ,KAAL,CAAY,KAAKnF,CAAjB,CAAT;AACA,SAAKC,CAAL,GAAS0E,IAAI,CAACQ,KAAL,CAAY,KAAKlF,CAAjB,CAAT;AAEA,WAAO,IAAP;AAEA,GA3YgC;AA6YjCmF,EAAAA,IAAI,EAAE,YAAY;AAEjB,SAAKrF,CAAL,GAAS4E,IAAI,CAACS,IAAL,CAAW,KAAKrF,CAAhB,CAAT;AACA,SAAKC,CAAL,GAAS2E,IAAI,CAACS,IAAL,CAAW,KAAKpF,CAAhB,CAAT;AACA,SAAKC,CAAL,GAAS0E,IAAI,CAACS,IAAL,CAAW,KAAKnF,CAAhB,CAAT;AAEA,WAAO,IAAP;AAEA,GArZgC;AAuZjCoF,EAAAA,KAAK,EAAE,YAAY;AAElB,SAAKtF,CAAL,GAAS4E,IAAI,CAACU,KAAL,CAAY,KAAKtF,CAAjB,CAAT;AACA,SAAKC,CAAL,GAAS2E,IAAI,CAACU,KAAL,CAAY,KAAKrF,CAAjB,CAAT;AACA,SAAKC,CAAL,GAAS0E,IAAI,CAACU,KAAL,CAAY,KAAKpF,CAAjB,CAAT;AAEA,WAAO,IAAP;AAEA,GA/ZgC;AAiajCqF,EAAAA,WAAW,EAAE,YAAY;AAExB,SAAKvF,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiB4E,IAAI,CAACS,IAAL,CAAW,KAAKrF,CAAhB,CAAjB,GAAuC4E,IAAI,CAACQ,KAAL,CAAY,KAAKpF,CAAjB,CAAhD;AACA,SAAKC,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiB2E,IAAI,CAACS,IAAL,CAAW,KAAKpF,CAAhB,CAAjB,GAAuC2E,IAAI,CAACQ,KAAL,CAAY,KAAKnF,CAAjB,CAAhD;AACA,SAAKC,CAAL,GAAW,KAAKA,CAAL,GAAS,CAAX,GAAiB0E,IAAI,CAACS,IAAL,CAAW,KAAKnF,CAAhB,CAAjB,GAAuC0E,IAAI,CAACQ,KAAL,CAAY,KAAKlF,CAAjB,CAAhD;AAEA,WAAO,IAAP;AAEA,GAzagC;AA2ajCsF,EAAAA,MAAM,EAAE,YAAY;AAEnB,SAAKxF,CAAL,GAAS,CAAE,KAAKA,CAAhB;AACA,SAAKC,CAAL,GAAS,CAAE,KAAKA,CAAhB;AACA,SAAKC,CAAL,GAAS,CAAE,KAAKA,CAAhB;AAEA,WAAO,IAAP;AAEA,GAnbgC;AAqbjCuF,EAAAA,GAAG,EAAE,UAAWpE,CAAX,EAAe;AAEnB,WAAO,KAAKrB,CAAL,GAASqB,CAAC,CAACrB,CAAX,GAAe,KAAKC,CAAL,GAASoB,CAAC,CAACpB,CAA1B,GAA8B,KAAKC,CAAL,GAASmB,CAAC,CAACnB,CAAhD;AAEA,GAzbgC;AA2bjC;AAEAwF,EAAAA,QAAQ,EAAE,YAAY;AAErB,WAAO,KAAK1F,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKC,CAAL,GAAS,KAAKA,CAAhC,GAAoC,KAAKC,CAAL,GAAS,KAAKA,CAAzD;AAEA,GAjcgC;AAmcjCiF,EAAAA,MAAM,EAAE,YAAY;AAEnB,WAAOP,IAAI,CAACe,IAAL,CAAW,KAAK3F,CAAL,GAAS,KAAKA,CAAd,GAAkB,KAAKC,CAAL,GAAS,KAAKA,CAAhC,GAAoC,KAAKC,CAAL,GAAS,KAAKA,CAA7D,CAAP;AAEA,GAvcgC;AAycjC0F,EAAAA,eAAe,EAAE,YAAY;AAE5B,WAAOhB,IAAI,CAACiB,GAAL,CAAU,KAAK7F,CAAf,IAAqB4E,IAAI,CAACiB,GAAL,CAAU,KAAK5F,CAAf,CAArB,GAA0C2E,IAAI,CAACiB,GAAL,CAAU,KAAK3F,CAAf,CAAjD;AAEA,GA7cgC;AA+cjCsE,EAAAA,SAAS,EAAE,YAAY;AAEtB,WAAO,KAAKE,YAAL,CAAmB,KAAKS,MAAL,MAAiB,CAApC,CAAP;AAEA,GAndgC;AAqdjCW,EAAAA,SAAS,EAAE,UAAWX,MAAX,EAAoB;AAE9B,WAAO,KAAKX,SAAL,GAAiBlC,cAAjB,CAAiC6C,MAAjC,CAAP;AAEA,GAzdgC;AA2djCY,EAAAA,IAAI,EAAE,UAAW1E,CAAX,EAAc2E,KAAd,EAAsB;AAE3B,SAAKhG,CAAL,IAAU,CAAEqB,CAAC,CAACrB,CAAF,GAAM,KAAKA,CAAb,IAAmBgG,KAA7B;AACA,SAAK/F,CAAL,IAAU,CAAEoB,CAAC,CAACpB,CAAF,GAAM,KAAKA,CAAb,IAAmB+F,KAA7B;AACA,SAAK9F,CAAL,IAAU,CAAEmB,CAAC,CAACnB,CAAF,GAAM,KAAKA,CAAb,IAAmB8F,KAA7B;AAEA,WAAO,IAAP;AAEA,GAnegC;AAqejCC,EAAAA,WAAW,EAAE,UAAWC,EAAX,EAAeC,EAAf,EAAmBH,KAAnB,EAA2B;AAEvC,WAAO,KAAK9D,UAAL,CAAiBiE,EAAjB,EAAqBD,EAArB,EAA0B5D,cAA1B,CAA0C0D,KAA1C,EAAkD1E,GAAlD,CAAuD4E,EAAvD,CAAP;AAEA,GAzegC;AA2ejCE,EAAAA,KAAK,EAAE,UAAW/E,CAAX,EAAcE,CAAd,EAAkB;AAExB,QAAKA,CAAC,KAAKC,SAAX,EAAuB;AAEtBC,MAAAA,OAAO,CAACC,IAAR,CAAc,2FAAd;AACA,aAAO,KAAK2E,YAAL,CAAmBhF,CAAnB,EAAsBE,CAAtB,CAAP;AAEA;;AAED,WAAO,KAAK8E,YAAL,CAAmB,IAAnB,EAAyBhF,CAAzB,CAAP;AAEA,GAtfgC;AAwfjCgF,EAAAA,YAAY,EAAE,UAAWvE,CAAX,EAAcC,CAAd,EAAkB;AAE/B,QAAIuE,EAAE,GAAGxE,CAAC,CAAC9B,CAAX;AAAA,QAAcuG,EAAE,GAAGzE,CAAC,CAAC7B,CAArB;AAAA,QAAwBuG,EAAE,GAAG1E,CAAC,CAAC5B,CAA/B;AACA,QAAIuG,EAAE,GAAG1E,CAAC,CAAC/B,CAAX;AAAA,QAAc0G,EAAE,GAAG3E,CAAC,CAAC9B,CAArB;AAAA,QAAwB0G,EAAE,GAAG5E,CAAC,CAAC7B,CAA/B;AAEA,SAAKF,CAAL,GAASuG,EAAE,GAAGI,EAAL,GAAUH,EAAE,GAAGE,EAAxB;AACA,SAAKzG,CAAL,GAASuG,EAAE,GAAGC,EAAL,GAAUH,EAAE,GAAGK,EAAxB;AACA,SAAKzG,CAAL,GAASoG,EAAE,GAAGI,EAAL,GAAUH,EAAE,GAAGE,EAAxB;AAEA,WAAO,IAAP;AAEA,GAngBgC;AAqgBjCG,EAAAA,eAAe,EAAE,UAAWC,MAAX,EAAoB;AAEpC,QAAIpG,MAAM,GAAGoG,MAAM,CAACpB,GAAP,CAAY,IAAZ,IAAqBoB,MAAM,CAACnB,QAAP,EAAlC;AAEA,WAAO,KAAKtE,IAAL,CAAWyF,MAAX,EAAoBvE,cAApB,CAAoC7B,MAApC,CAAP;AAEA,GA3gBgC;AA6gBjCqG,EAAAA,cAAc,EAAE,YAAY;AAE3B,QAAIZ,EAAE,GAAG,IAAInG,OAAJ,EAAT;AAEA,WAAO,SAAS+G,cAAT,CAAyBC,WAAzB,EAAuC;AAE7Cb,MAAAA,EAAE,CAAC9E,IAAH,CAAS,IAAT,EAAgBwF,eAAhB,CAAiCG,WAAjC;AAEA,aAAO,KAAK9E,GAAL,CAAUiE,EAAV,CAAP;AAEA,KAND;AAQA,GAZe,EA7gBiB;AA2hBjCc,EAAAA,OAAO,EAAE,YAAY;AAEpB;AACA;AAEA,QAAId,EAAE,GAAG,IAAInG,OAAJ,EAAT;AAEA,WAAO,SAASiH,OAAT,CAAkBC,MAAlB,EAA2B;AAEjC,aAAO,KAAKhF,GAAL,CAAUiE,EAAE,CAAC9E,IAAH,CAAS6F,MAAT,EAAkB3E,cAAlB,CAAkC,IAAI,KAAKmD,GAAL,CAAUwB,MAAV,CAAtC,CAAV,CAAP;AAEA,KAJD;AAMA,GAbQ,EA3hBwB;AA0iBjCC,EAAAA,OAAO,EAAE,UAAW7F,CAAX,EAAe;AAEvB,QAAI8F,KAAK,GAAG,KAAK1B,GAAL,CAAUpE,CAAV,IAAkBuD,IAAI,CAACe,IAAL,CAAW,KAAKD,QAAL,KAAkBrE,CAAC,CAACqE,QAAF,EAA7B,CAA9B,CAFuB,CAIvB;;AAEA,WAAOd,IAAI,CAACwC,IAAL,CAAWvH,KAAK,CAACiF,KAAN,CAAaqC,KAAb,EAAoB,CAAE,CAAtB,EAAyB,CAAzB,CAAX,CAAP;AAEA,GAljBgC;AAojBjCE,EAAAA,UAAU,EAAE,UAAWhG,CAAX,EAAe;AAE1B,WAAOuD,IAAI,CAACe,IAAL,CAAW,KAAK2B,iBAAL,CAAwBjG,CAAxB,CAAX,CAAP;AAEA,GAxjBgC;AA0jBjCiG,EAAAA,iBAAiB,EAAE,UAAWjG,CAAX,EAAe;AAEjC,QAAIkG,EAAE,GAAG,KAAKvH,CAAL,GAASqB,CAAC,CAACrB,CAApB;AAAA,QAAuBwH,EAAE,GAAG,KAAKvH,CAAL,GAASoB,CAAC,CAACpB,CAAvC;AAAA,QAA0CwH,EAAE,GAAG,KAAKvH,CAAL,GAASmB,CAAC,CAACnB,CAA1D;AAEA,WAAOqH,EAAE,GAAGA,EAAL,GAAUC,EAAE,GAAGA,EAAf,GAAoBC,EAAE,GAAGA,EAAhC;AAEA,GAhkBgC;AAkkBjCC,EAAAA,mBAAmB,EAAE,UAAWrG,CAAX,EAAe;AAEnC,WAAOuD,IAAI,CAACiB,GAAL,CAAU,KAAK7F,CAAL,GAASqB,CAAC,CAACrB,CAArB,IAA2B4E,IAAI,CAACiB,GAAL,CAAU,KAAK5F,CAAL,GAASoB,CAAC,CAACpB,CAArB,CAA3B,GAAsD2E,IAAI,CAACiB,GAAL,CAAU,KAAK3F,CAAL,GAASmB,CAAC,CAACnB,CAArB,CAA7D;AAEA,GAtkBgC;AAwkBjCyH,EAAAA,gBAAgB,EAAE,UAAW9F,CAAX,EAAe;AAEhC,WAAO,KAAK+F,sBAAL,CAA6B/F,CAAC,CAACgG,MAA/B,EAAuChG,CAAC,CAACiG,GAAzC,EAA8CjG,CAAC,CAACsF,KAAhD,CAAP;AAEA,GA5kBgC;AA8kBjCS,EAAAA,sBAAsB,EAAE,UAAWC,MAAX,EAAmBC,GAAnB,EAAwBX,KAAxB,EAAgC;AAEvD,QAAIY,YAAY,GAAGnD,IAAI,CAACoD,GAAL,CAAUF,GAAV,IAAkBD,MAArC;AAEA,SAAK7H,CAAL,GAAS+H,YAAY,GAAGnD,IAAI,CAACoD,GAAL,CAAUb,KAAV,CAAxB;AACA,SAAKlH,CAAL,GAAS2E,IAAI,CAACqD,GAAL,CAAUH,GAAV,IAAkBD,MAA3B;AACA,SAAK3H,CAAL,GAAS6H,YAAY,GAAGnD,IAAI,CAACqD,GAAL,CAAUd,KAAV,CAAxB;AAEA,WAAO,IAAP;AAEA,GAxlBgC;AA0lBjCe,EAAAA,kBAAkB,EAAE,UAAWC,CAAX,EAAe;AAElC,WAAO,KAAKC,wBAAL,CAA+BD,CAAC,CAACN,MAAjC,EAAyCM,CAAC,CAAChB,KAA3C,EAAkDgB,CAAC,CAAClI,CAApD,CAAP;AAEA,GA9lBgC;AAgmBjCmI,EAAAA,wBAAwB,EAAE,UAAWP,MAAX,EAAmBV,KAAnB,EAA0BlH,CAA1B,EAA8B;AAEvD,SAAKD,CAAL,GAAS6H,MAAM,GAAGjD,IAAI,CAACoD,GAAL,CAAUb,KAAV,CAAlB;AACA,SAAKlH,CAAL,GAASA,CAAT;AACA,SAAKC,CAAL,GAAS2H,MAAM,GAAGjD,IAAI,CAACqD,GAAL,CAAUd,KAAV,CAAlB;AAEA,WAAO,IAAP;AAEA,GAxmBgC;AA0mBjCkB,EAAAA,qBAAqB,EAAE,UAAWlF,CAAX,EAAe;AAErC,QAAIC,CAAC,GAAGD,CAAC,CAACE,QAAV;AAEA,SAAKrD,CAAL,GAASoD,CAAC,CAAE,EAAF,CAAV;AACA,SAAKnD,CAAL,GAASmD,CAAC,CAAE,EAAF,CAAV;AACA,SAAKlD,CAAL,GAASkD,CAAC,CAAE,EAAF,CAAV;AAEA,WAAO,IAAP;AAEA,GApnBgC;AAsnBjCkF,EAAAA,kBAAkB,EAAE,UAAWnF,CAAX,EAAe;AAElC,QAAIoF,EAAE,GAAG,KAAKC,mBAAL,CAA0BrF,CAA1B,EAA6B,CAA7B,EAAiCgC,MAAjC,EAAT;AACA,QAAIsD,EAAE,GAAG,KAAKD,mBAAL,CAA0BrF,CAA1B,EAA6B,CAA7B,EAAiCgC,MAAjC,EAAT;AACA,QAAIuD,EAAE,GAAG,KAAKF,mBAAL,CAA0BrF,CAA1B,EAA6B,CAA7B,EAAiCgC,MAAjC,EAAT;AAEA,SAAKnF,CAAL,GAASuI,EAAT;AACA,SAAKtI,CAAL,GAASwI,EAAT;AACA,SAAKvI,CAAL,GAASwI,EAAT;AAEA,WAAO,IAAP;AAEA,GAloBgC;AAooBjCF,EAAAA,mBAAmB,EAAE,UAAWrF,CAAX,EAAcrC,KAAd,EAAsB;AAE1C,WAAO,KAAK6H,SAAL,CAAgBxF,CAAC,CAACE,QAAlB,EAA4BvC,KAAK,GAAG,CAApC,CAAP;AAEA,GAxoBgC;AA0oBjC8H,EAAAA,MAAM,EAAE,UAAWvH,CAAX,EAAe;AAEtB,WAAWA,CAAC,CAACrB,CAAF,KAAQ,KAAKA,CAAf,IAAwBqB,CAAC,CAACpB,CAAF,KAAQ,KAAKA,CAArC,IAA8CoB,CAAC,CAACnB,CAAF,KAAQ,KAAKA,CAApE;AAEA,GA9oBgC;AAgpBjCyI,EAAAA,SAAS,EAAE,UAAWE,KAAX,EAAkBC,MAAlB,EAA2B;AAErC,QAAKA,MAAM,KAAKtH,SAAhB,EAA4BsH,MAAM,GAAG,CAAT;AAE5B,SAAK9I,CAAL,GAAS6I,KAAK,CAAEC,MAAF,CAAd;AACA,SAAK7I,CAAL,GAAS4I,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAd;AACA,SAAK5I,CAAL,GAAS2I,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAd;AAEA,WAAO,IAAP;AAEA,GA1pBgC;AA4pBjCC,EAAAA,OAAO,EAAE,UAAWF,KAAX,EAAkBC,MAAlB,EAA2B;AAEnC,QAAKD,KAAK,KAAKrH,SAAf,EAA2BqH,KAAK,GAAG,EAAR;AAC3B,QAAKC,MAAM,KAAKtH,SAAhB,EAA4BsH,MAAM,GAAG,CAAT;AAE5BD,IAAAA,KAAK,CAAEC,MAAF,CAAL,GAAkB,KAAK9I,CAAvB;AACA6I,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAK7I,CAA3B;AACA4I,IAAAA,KAAK,CAAEC,MAAM,GAAG,CAAX,CAAL,GAAsB,KAAK5I,CAA3B;AAEA,WAAO2I,KAAP;AAEA,GAvqBgC;AAyqBjCG,EAAAA,mBAAmB,EAAE,UAAWC,SAAX,EAAsBnI,KAAtB,EAA6BgI,MAA7B,EAAsC;AAE1D,QAAKA,MAAM,KAAKtH,SAAhB,EAA4B;AAE3BC,MAAAA,OAAO,CAACC,IAAR,CAAc,qEAAd;AAEA;;AAED,SAAK1B,CAAL,GAASiJ,SAAS,CAACC,IAAV,CAAgBpI,KAAhB,CAAT;AACA,SAAKb,CAAL,GAASgJ,SAAS,CAACE,IAAV,CAAgBrI,KAAhB,CAAT;AACA,SAAKZ,CAAL,GAAS+I,SAAS,CAACG,IAAV,CAAgBtI,KAAhB,CAAT;AAEA,WAAO,IAAP;AAEA;AAvrBgC,CAAlC;AA4rBA,SAASf,OAAT","sourcesContent":["import { _Math } from './Math.js';\nimport { Quaternion } from './Quaternion.js';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t},\n\n\tunproject: function ( camera ) {\n\n\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t},\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function ( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t},\n\n\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\tthis.y = Math.cos( phi ) * radius;\n\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t},\n\n\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\tthis.x = radius * Math.sin( theta );\n\t\tthis.y = y;\n\t\tthis.z = radius * Math.cos( theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n\nexport { Vector3 };\n"]},"metadata":{},"sourceType":"module"}