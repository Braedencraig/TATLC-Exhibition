{"ast":null,"code":"import React from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport GifLoader from \"three-gif-loader\";\nimport ReactHowler from \"react-howler\"; // Spheres\n\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\nimport seven from \"../assets/spheres/seven.jpg\"; // Artworks\n\nimport imagePlaceholder from \"../assets/art/artworkPlaceholder.jpg\";\nimport gifPlaceholder from \"../assets/gifs/gifPlaceholder.gif\"; // Audio\n\nimport audio from \"../assets/audio/audio.mp3\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelfGuided() {\n  let panorama1, panorama2, panorama3, panorama4, panorama5, panorama6, panorama7, viewer, container; // const lookAtPositions = [\n  //   new THREE.Vector3(4871.39, 1088.07, -118.41),\n  //   new THREE.Vector3(1278.27, 732.65, 4769.19)\n  // ];\n\n  container = document.querySelector('#container'); // Create spheres\n  // GoogleStreetviewPanorama( 'JmSoPsBPhqWvaBmOqfFzgA' ) could do this to save on file size\n\n  panorama1 = new PANOLENS.ImagePanorama(one);\n  panorama2 = new PANOLENS.ImagePanorama(two);\n  panorama3 = new PANOLENS.ImagePanorama(three);\n  panorama4 = new PANOLENS.ImagePanorama(four);\n  panorama5 = new PANOLENS.ImagePanorama(five);\n  panorama6 = new PANOLENS.ImagePanorama(six);\n  panorama7 = new PANOLENS.ImagePanorama(seven); // panorama2.fadeIn()\n  // Link spheres, Move these so that you cant see the lag in image loading on and off or add loader.\n\n  panorama1.link(panorama2, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama2.link(panorama3, new THREE.Vector3(-6907.5, 304.88, 1000.0));\n  panorama3.link(panorama4, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama4.link(panorama5, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama5.link(panorama6, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama6.link(panorama7, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama7.link(panorama1, new THREE.Vector3(-207.5, 504.88, -6000.0)); // Create viewer and add panoramas\n\n  viewer = new PANOLENS.Viewer({\n    autoHideInfospot: false\n  });\n  viewer.add(panorama1);\n  viewer.add(panorama2); // viewer.add(panorama3);\n  // viewer.add(panorama4);\n  // viewer.add(panorama5);\n  // viewer.add(panorama6);\n  // viewer.add(panorama7);\n  // Gif loader\n\n  const loader = new GifLoader(); // Sphere one artwork - contains one\n  // const geometryOne = new THREE.PlaneGeometry(300, 300, 300);\n  // const loaderOne = new THREE.TextureLoader();\n  // const materialOne = new THREE.MeshBasicMaterial({\n  //   map: loaderOne.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeOne = new THREE.Mesh(geometryOne, materialOne);\n  // planeOne.position.set(-30, 100, 340);\n  // panorama1.add(planeOne);\n  // // Sphere two artwork - contains two & three\n  // const textureTwo = loader.load(\n  //   gifPlaceholder,\n  //   // onLoad callback\n  //   function (reader) {\n  //     console.log(reader.numFrames());\n  //   },\n  //   // onProgress callback\n  //   function (xhr) {\n  //     console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n  //   },\n  //   // onError callback\n  //   function () {\n  //     console.error(\"An error happened.\");\n  //   }\n  // );\n  // const materialTwo = new THREE.MeshBasicMaterial({\n  //   map: textureTwo,\n  //   // transparent: true,\n  //   side: THREE.DoubleSide,\n  // });\n  // const geometryTwo = new THREE.PlaneGeometry(300, 300, 300);\n  // const planeTwo = new THREE.Mesh(geometryTwo, materialTwo);\n  // planeTwo.position.set(-160, 220, 420);\n  // planeTwo.rotation.y -= 0.3;\n  // panorama2.add(planeTwo);\n  // const geometryThree = new THREE.PlaneGeometry(300, 300, 300);\n  // const loaderThree = new THREE.TextureLoader();\n  // const materialThree = new THREE.MeshBasicMaterial({\n  //   map: loaderThree.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeThree = new THREE.Mesh(geometryThree, materialThree);\n  // planeThree.position.set(10, 210, -440);\n  // panorama2.add(planeThree);\n  // // Sphere three artwork - contains four\n  // const geometryFour = new THREE.PlaneGeometry(300, 300, 300);\n  // const loaderFour = new THREE.TextureLoader();\n  // const materialFour = new THREE.MeshBasicMaterial({\n  //   map: loaderFour.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeFour = new THREE.Mesh(geometryFour, materialFour);\n  // planeFour.position.set(-450, 130, 90);\n  // planeFour.rotation.y += 1.8;\n  // panorama3.add(planeFour);\n  // // Sphere four artwork - contains five & six\n  // const geometryFive = new THREE.PlaneGeometry(200, 200, 200);\n  // const loaderFive = new THREE.TextureLoader();\n  // const materialFive = new THREE.MeshBasicMaterial({\n  //   map: loaderFive.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeFive = new THREE.Mesh(geometryFive, materialFive);\n  // planeFive.position.set(-350, -10, 10);\n  // planeFive.rotation.y += 1.7;\n  // panorama4.add(planeFive);\n  // const textureSix = loader.load(\n  //   gifPlaceholder,\n  //   // onLoad callback\n  //   function (reader) {\n  //     console.log(reader.numFrames());\n  //   },\n  //   // onProgress callback\n  //   function (xhr) {\n  //     console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n  //   },\n  //   // onError callback\n  //   function () {\n  //     console.error(\"An error happened.\");\n  //   }\n  // );\n  // const materialSix = new THREE.MeshBasicMaterial({\n  //   map: textureSix,\n  //   // transparent: true,\n  //   side: THREE.DoubleSide,\n  // });\n  // const geometrySix = new THREE.PlaneGeometry(250, 250, 250);\n  // const planeSix = new THREE.Mesh(geometrySix, materialSix);\n  // planeSix.position.set(350, 80, -60);\n  // planeSix.rotation.y += 1.7;\n  // panorama4.add(planeSix);\n  // // Sphere five artwork - contains seven & eight\n  // const geometrySeven = new THREE.PlaneGeometry(300, 300, 300);\n  // const loaderSeven = new THREE.TextureLoader();\n  // const materialSeven = new THREE.MeshBasicMaterial({\n  //   map: loaderSeven.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeSeven = new THREE.Mesh(geometrySeven, materialSeven);\n  // planeSeven.position.set(-350, 100, 10);\n  // planeSeven.rotation.y += 1.7;\n  // panorama5.add(planeSeven);\n  // const textureEight = loader.load(\n  //   gifPlaceholder,\n  //   // onLoad callback\n  //   function (reader) {\n  //     console.log(reader.numFrames());\n  //   },\n  //   // onProgress callback\n  //   function (xhr) {\n  //     console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n  //   },\n  //   // onError callback\n  //   function () {\n  //     console.error(\"An error happened.\");\n  //   }\n  // );\n  // const materialEight = new THREE.MeshBasicMaterial({\n  //   map: textureEight,\n  //   // transparent: true,\n  //   side: THREE.DoubleSide,\n  // });\n  // const geometryEight = new THREE.PlaneGeometry(300, 300, 300);\n  // const planeEight = new THREE.Mesh(geometryEight, materialEight);\n  // planeEight.position.set(350, 80, -60);\n  // planeEight.rotation.y += 1.7;\n  // panorama5.add(planeEight);\n  //  // Sphere six artwork - contains nine\n  //  const geometryNine = new THREE.PlaneGeometry(300, 300, 300);\n  //  const loaderNine = new THREE.TextureLoader();\n  //  const materialNine = new THREE.MeshBasicMaterial({\n  //    map: loaderNine.load(imagePlaceholder),\n  //    side: THREE.DoubleSide,\n  //  });\n  //  const planeNine = new THREE.Mesh(geometryNine, materialNine);\n  //  planeNine.position.set(-350, 160, -220);\n  //  planeNine.rotation.y += 1;\n  //  panorama6.add(planeNine);\n  //  // Sphere seven artwork - contains ten\n  //  const geometryTen = new THREE.PlaneGeometry(250, 250, 250);\n  //  const loaderTen = new THREE.TextureLoader();\n  //  const materialTen = new THREE.MeshBasicMaterial({\n  //    map: loaderTen.load(imagePlaceholder),\n  //    side: THREE.DoubleSide,\n  //  });\n  //  const planeTen = new THREE.Mesh(geometryTen, materialTen);\n  //  planeTen.position.set(-200, 160, -350);\n  //  planeTen.rotation.y += 0.4;\n  //  panorama7.add(planeTen);\n  // var light = new THREE.DirectionalLight(0xffffff);\n  // light.position.set(1, 1, 1).normalize();\n  // panorama1.add(light);\n  // var loaderFont = new THREE.FontLoader();\n  // loaderFont.load(\n  //   \"https://threejs.org/examples/fonts/helvetiker_regular.typeface.json\",\n  //   function (font) {\n  //     var textGeometry = new THREE.TextGeometry(\"text\", {\n  //       font: font,\n  //       size: 10,\n  //       height: 10,\n  //       curveSegments: 4,\n  //       bevelThickness: 1,\n  //       bevelSize: 1,\n  //       bevelEnabled: true,\n  //     });\n  //     var textMaterial = new THREE.MeshPhongMaterial({\n  //       color: 0xffffff,\n  //       flatShading: true,\n  //     });\n  //     var meshFont = new THREE.Mesh(textGeometry, textMaterial);\n  //     meshFont.position.set(-120, 5, -20);\n  //     meshFont.rotation.y += 1.5;\n  //     panorama1.add(meshFont);\n  //   }\n  // );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_c = SelfGuided;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelfGuided\");","map":{"version":3,"sources":["/Users/bcraig/Desktop/test/src/pages/SelfGuided.js"],"names":["React","PANOLENS","THREE","GifLoader","ReactHowler","one","two","three","four","five","six","seven","imagePlaceholder","gifPlaceholder","audio","SelfGuided","panorama1","panorama2","panorama3","panorama4","panorama5","panorama6","panorama7","viewer","container","document","querySelector","ImagePanorama","link","Vector3","Viewer","autoHideInfospot","add","loader"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport GifLoader from \"three-gif-loader\";\nimport ReactHowler from \"react-howler\";\n// Spheres\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\nimport seven from \"../assets/spheres/seven.jpg\";\n// Artworks\nimport imagePlaceholder from \"../assets/art/artworkPlaceholder.jpg\";\nimport gifPlaceholder from \"../assets/gifs/gifPlaceholder.gif\";\n// Audio\nimport audio from \"../assets/audio/audio.mp3\"\n\nexport default function SelfGuided() {  \n  let panorama1, \n      panorama2, \n      panorama3, \n      panorama4, \n      panorama5, \n      panorama6, \n      panorama7, \n      viewer,\n      container;\n\n  // const lookAtPositions = [\n  //   new THREE.Vector3(4871.39, 1088.07, -118.41),\n  //   new THREE.Vector3(1278.27, 732.65, 4769.19)\n  // ];\n\n  container = document.querySelector( '#container' );\n\n  // Create spheres\n  // GoogleStreetviewPanorama( 'JmSoPsBPhqWvaBmOqfFzgA' ) could do this to save on file size\n  panorama1 = new PANOLENS.ImagePanorama(one);\n  panorama2 = new PANOLENS.ImagePanorama(two);\n  panorama3 = new PANOLENS.ImagePanorama(three);\n  panorama4 = new PANOLENS.ImagePanorama(four);\n  panorama5 = new PANOLENS.ImagePanorama(five);\n  panorama6 = new PANOLENS.ImagePanorama(six);\n  panorama7 = new PANOLENS.ImagePanorama(seven);\n\n  // panorama2.fadeIn()\n\n  // Link spheres, Move these so that you cant see the lag in image loading on and off or add loader.\n  panorama1.link(panorama2, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama2.link(panorama3, new THREE.Vector3(-6907.5, 304.88, 1000.0));\n  panorama3.link(panorama4, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama4.link(panorama5, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama5.link(panorama6, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama6.link(panorama7, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama7.link(panorama1, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  \n\n  // Create viewer and add panoramas\n  viewer = new PANOLENS.Viewer({ autoHideInfospot: false });\n  viewer.add(panorama1);\n  viewer.add(panorama2);\n  // viewer.add(panorama3);\n  // viewer.add(panorama4);\n  // viewer.add(panorama5);\n  // viewer.add(panorama6);\n  // viewer.add(panorama7);\n\n\n  // Gif loader\n  const loader = new GifLoader();\n\n  // Sphere one artwork - contains one\n  // const geometryOne = new THREE.PlaneGeometry(300, 300, 300);\n  // const loaderOne = new THREE.TextureLoader();\n  // const materialOne = new THREE.MeshBasicMaterial({\n  //   map: loaderOne.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeOne = new THREE.Mesh(geometryOne, materialOne);\n  // planeOne.position.set(-30, 100, 340);\n  // panorama1.add(planeOne);\n\n  // // Sphere two artwork - contains two & three\n  // const textureTwo = loader.load(\n  //   gifPlaceholder,\n  //   // onLoad callback\n  //   function (reader) {\n  //     console.log(reader.numFrames());\n  //   },\n  //   // onProgress callback\n  //   function (xhr) {\n  //     console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n  //   },\n  //   // onError callback\n  //   function () {\n  //     console.error(\"An error happened.\");\n  //   }\n  // );\n  // const materialTwo = new THREE.MeshBasicMaterial({\n  //   map: textureTwo,\n  //   // transparent: true,\n  //   side: THREE.DoubleSide,\n  // });\n  // const geometryTwo = new THREE.PlaneGeometry(300, 300, 300);\n  // const planeTwo = new THREE.Mesh(geometryTwo, materialTwo);\n  // planeTwo.position.set(-160, 220, 420);\n  // planeTwo.rotation.y -= 0.3;\n  // panorama2.add(planeTwo);\n\n  // const geometryThree = new THREE.PlaneGeometry(300, 300, 300);\n  // const loaderThree = new THREE.TextureLoader();\n  // const materialThree = new THREE.MeshBasicMaterial({\n  //   map: loaderThree.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeThree = new THREE.Mesh(geometryThree, materialThree);\n  // planeThree.position.set(10, 210, -440);\n  // panorama2.add(planeThree);\n\n  // // Sphere three artwork - contains four\n  // const geometryFour = new THREE.PlaneGeometry(300, 300, 300);\n  // const loaderFour = new THREE.TextureLoader();\n  // const materialFour = new THREE.MeshBasicMaterial({\n  //   map: loaderFour.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeFour = new THREE.Mesh(geometryFour, materialFour);\n  // planeFour.position.set(-450, 130, 90);\n  // planeFour.rotation.y += 1.8;\n  // panorama3.add(planeFour);\n\n  // // Sphere four artwork - contains five & six\n  // const geometryFive = new THREE.PlaneGeometry(200, 200, 200);\n  // const loaderFive = new THREE.TextureLoader();\n  // const materialFive = new THREE.MeshBasicMaterial({\n  //   map: loaderFive.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeFive = new THREE.Mesh(geometryFive, materialFive);\n  // planeFive.position.set(-350, -10, 10);\n  // planeFive.rotation.y += 1.7;\n  // panorama4.add(planeFive);\n\n  // const textureSix = loader.load(\n  //   gifPlaceholder,\n  //   // onLoad callback\n  //   function (reader) {\n  //     console.log(reader.numFrames());\n  //   },\n  //   // onProgress callback\n  //   function (xhr) {\n  //     console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n  //   },\n  //   // onError callback\n  //   function () {\n  //     console.error(\"An error happened.\");\n  //   }\n  // );\n  // const materialSix = new THREE.MeshBasicMaterial({\n  //   map: textureSix,\n  //   // transparent: true,\n  //   side: THREE.DoubleSide,\n  // });\n  // const geometrySix = new THREE.PlaneGeometry(250, 250, 250);\n  // const planeSix = new THREE.Mesh(geometrySix, materialSix);\n  // planeSix.position.set(350, 80, -60);\n  // planeSix.rotation.y += 1.7;\n  // panorama4.add(planeSix);\n\n  // // Sphere five artwork - contains seven & eight\n  // const geometrySeven = new THREE.PlaneGeometry(300, 300, 300);\n  // const loaderSeven = new THREE.TextureLoader();\n  // const materialSeven = new THREE.MeshBasicMaterial({\n  //   map: loaderSeven.load(imagePlaceholder),\n  //   side: THREE.DoubleSide,\n  // });\n  // const planeSeven = new THREE.Mesh(geometrySeven, materialSeven);\n  // planeSeven.position.set(-350, 100, 10);\n  // planeSeven.rotation.y += 1.7;\n  // panorama5.add(planeSeven);\n\n  // const textureEight = loader.load(\n  //   gifPlaceholder,\n  //   // onLoad callback\n  //   function (reader) {\n  //     console.log(reader.numFrames());\n  //   },\n  //   // onProgress callback\n  //   function (xhr) {\n  //     console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n  //   },\n  //   // onError callback\n  //   function () {\n  //     console.error(\"An error happened.\");\n  //   }\n  // );\n  // const materialEight = new THREE.MeshBasicMaterial({\n  //   map: textureEight,\n  //   // transparent: true,\n  //   side: THREE.DoubleSide,\n  // });\n  // const geometryEight = new THREE.PlaneGeometry(300, 300, 300);\n  // const planeEight = new THREE.Mesh(geometryEight, materialEight);\n  // planeEight.position.set(350, 80, -60);\n  // planeEight.rotation.y += 1.7;\n  // panorama5.add(planeEight);\n\n  //  // Sphere six artwork - contains nine\n  //  const geometryNine = new THREE.PlaneGeometry(300, 300, 300);\n  //  const loaderNine = new THREE.TextureLoader();\n  //  const materialNine = new THREE.MeshBasicMaterial({\n  //    map: loaderNine.load(imagePlaceholder),\n  //    side: THREE.DoubleSide,\n  //  });\n  //  const planeNine = new THREE.Mesh(geometryNine, materialNine);\n  //  planeNine.position.set(-350, 160, -220);\n  //  planeNine.rotation.y += 1;\n  //  panorama6.add(planeNine);\n\n  //  // Sphere seven artwork - contains ten\n  //  const geometryTen = new THREE.PlaneGeometry(250, 250, 250);\n  //  const loaderTen = new THREE.TextureLoader();\n  //  const materialTen = new THREE.MeshBasicMaterial({\n  //    map: loaderTen.load(imagePlaceholder),\n  //    side: THREE.DoubleSide,\n  //  });\n  //  const planeTen = new THREE.Mesh(geometryTen, materialTen);\n  //  planeTen.position.set(-200, 160, -350);\n  //  planeTen.rotation.y += 0.4;\n  //  panorama7.add(planeTen);\n\n\n\n\n  // var light = new THREE.DirectionalLight(0xffffff);\n  // light.position.set(1, 1, 1).normalize();\n  // panorama1.add(light);\n\n  // var loaderFont = new THREE.FontLoader();\n  // loaderFont.load(\n  //   \"https://threejs.org/examples/fonts/helvetiker_regular.typeface.json\",\n  //   function (font) {\n  //     var textGeometry = new THREE.TextGeometry(\"text\", {\n  //       font: font,\n  //       size: 10,\n  //       height: 10,\n  //       curveSegments: 4,\n  //       bevelThickness: 1,\n  //       bevelSize: 1,\n  //       bevelEnabled: true,\n  //     });\n\n  //     var textMaterial = new THREE.MeshPhongMaterial({\n  //       color: 0xffffff,\n  //       flatShading: true,\n  //     });\n\n  //     var meshFont = new THREE.Mesh(textGeometry, textMaterial);\n  //     meshFont.position.set(-120, 5, -20);\n  //     meshFont.rotation.y += 1.5;\n  //     panorama1.add(meshFont);\n  //   }\n  // );\n\n  return (\n    <>\n      {/* <ReactHowler\n        src={audio}\n        playing={true}\n        loop={true}\n      /> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}