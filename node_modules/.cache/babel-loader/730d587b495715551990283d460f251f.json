{"ast":null,"code":"var _jsxFileName = \"/Users/bcraig/Desktop/test/src/pages/SelfGuided.js\";\nimport React, { useState, useEffect } from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport GifLoader from \"three-gif-loader\";\nimport ReactHowler from \"react-howler\"; // Spheres\n\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\nimport seven from \"../assets/spheres/seven.jpg\"; // Artworks\n\nimport imagePlaceholder from \"../assets/art/artworkPlaceholder.jpg\";\nimport gifPlaceholder from \"../assets/gifs/gifPlaceholder.gif\"; // Audio\n\nimport audio from \"../assets/audio/audio.mp3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SelfGuided() {\n  let panorama1, panorama2, panorama3, panorama4, panorama5, panorama6, panorama7, viewer, progress, progressElement;\n\n  function onEnter(event) {\n    if (progressElement !== undefined) {\n      console.log('erere');\n      progressElement.style.width = 0;\n      progressElement.classList.remove('finish');\n    }\n  }\n\n  function onProgress(event) {\n    if (progressElement !== undefined) {\n      console.log('HERE');\n      progress = event.progress.loaded / event.progress.total * 100;\n      progressElement.style.width = progress + '%';\n\n      if (progress === 100) {\n        progressElement.classList.add('finish');\n      }\n    }\n  } // Create spheres\n  // GoogleStreetviewPanorama( 'JmSoPsBPhqWvaBmOqfFzgA' ) could do this to save on file size\n\n\n  panorama1 = new PANOLENS.ImagePanorama(one);\n  panorama2 = new PANOLENS.ImagePanorama(two);\n  panorama3 = new PANOLENS.ImagePanorama(three);\n  panorama4 = new PANOLENS.ImagePanorama(four);\n  panorama5 = new PANOLENS.ImagePanorama(five);\n  panorama6 = new PANOLENS.ImagePanorama(six);\n  panorama7 = new PANOLENS.ImagePanorama(seven); // Add progress listeners to panoramas\n\n  panorama1.addEventListener('progress', onProgress);\n  panorama1.addEventListener('enter', onEnter);\n  panorama2.addEventListener('progress', onProgress);\n  panorama2.addEventListener('enter', onEnter);\n  panorama3.addEventListener('progress', onProgress);\n  panorama3.addEventListener('enter', onEnter);\n  panorama4.addEventListener('progress', onProgress);\n  panorama4.addEventListener('enter', onEnter);\n  panorama5.addEventListener('progress', onProgress);\n  panorama5.addEventListener('enter', onEnter);\n  panorama6.addEventListener('progress', onProgress);\n  panorama6.addEventListener('enter', onEnter);\n  panorama7.addEventListener('progress', onProgress);\n  panorama7.addEventListener('enter', onEnter); // Link spheres\n\n  panorama1.link(panorama2, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama2.link(panorama3, new THREE.Vector3(-6907.5, 304.88, 1000.0));\n  panorama3.link(panorama4, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama4.link(panorama5, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama5.link(panorama6, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama6.link(panorama7, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama7.link(panorama1, new THREE.Vector3(-207.5, 504.88, -6000.0)); // Create viewer and add panoramas\n\n  viewer = new PANOLENS.Viewer({\n    autoHideInfospot: false\n  });\n  viewer.add(panorama1, panorama2, panorama3, panorama4, panorama5, panorama6, panorama7); // Gif loader\n\n  const loader = new GifLoader(); // Sphere one artwork - contains one\n\n  const geometryOne = new THREE.PlaneGeometry(300, 300, 300);\n  const loaderOne = new THREE.TextureLoader();\n  const materialOne = new THREE.MeshBasicMaterial({\n    map: loaderOne.load(imagePlaceholder),\n    side: THREE.DoubleSide\n  });\n  const planeOne = new THREE.Mesh(geometryOne, materialOne);\n  planeOne.position.set(-30, 100, 340);\n  panorama1.add(planeOne); // Sphere two artwork - contains two & three\n\n  const textureTwo = loader.load(gifPlaceholder, // onLoad callback\n  function (reader) {\n    console.log(reader.numFrames());\n  }, // onProgress callback\n  function (xhr) {\n    console.log(`${xhr.loaded / xhr.total * 100}% loaded`);\n  }, // onError callback\n  function () {\n    console.error(\"An error happened.\");\n  });\n  const materialTwo = new THREE.MeshBasicMaterial({\n    map: textureTwo,\n    // transparent: true,\n    side: THREE.DoubleSide\n  });\n  const geometryTwo = new THREE.PlaneGeometry(300, 300, 300);\n  const planeTwo = new THREE.Mesh(geometryTwo, materialTwo);\n  planeTwo.position.set(-160, 220, 420);\n  planeTwo.rotation.y -= 0.3;\n  panorama2.add(planeTwo);\n  const geometryThree = new THREE.PlaneGeometry(300, 300, 300);\n  const loaderThree = new THREE.TextureLoader();\n  const materialThree = new THREE.MeshBasicMaterial({\n    map: loaderThree.load(imagePlaceholder),\n    side: THREE.DoubleSide\n  });\n  const planeThree = new THREE.Mesh(geometryThree, materialThree);\n  planeThree.position.set(10, 210, -440);\n  panorama2.add(planeThree); // Sphere three artwork - contains four\n\n  const geometryFour = new THREE.PlaneGeometry(300, 300, 300);\n  const loaderFour = new THREE.TextureLoader();\n  const materialFour = new THREE.MeshBasicMaterial({\n    map: loaderFour.load(imagePlaceholder),\n    side: THREE.DoubleSide\n  });\n  const planeFour = new THREE.Mesh(geometryFour, materialFour);\n  planeFour.position.set(-450, 130, 90);\n  planeFour.rotation.y += 1.8;\n  panorama3.add(planeFour); // Sphere four artwork - contains five & six\n\n  const geometryFive = new THREE.PlaneGeometry(200, 200, 200);\n  const loaderFive = new THREE.TextureLoader();\n  const materialFive = new THREE.MeshBasicMaterial({\n    map: loaderFive.load(imagePlaceholder),\n    side: THREE.DoubleSide\n  });\n  const planeFive = new THREE.Mesh(geometryFive, materialFive);\n  planeFive.position.set(-350, -10, 10);\n  planeFive.rotation.y += 1.7;\n  panorama4.add(planeFive);\n  const textureSix = loader.load(gifPlaceholder, // onLoad callback\n  function (reader) {\n    console.log(reader.numFrames());\n  }, // onProgress callback\n  function (xhr) {\n    console.log(`${xhr.loaded / xhr.total * 100}% loaded`);\n  }, // onError callback\n  function () {\n    console.error(\"An error happened.\");\n  });\n  const materialSix = new THREE.MeshBasicMaterial({\n    map: textureSix,\n    // transparent: true,\n    side: THREE.DoubleSide\n  });\n  const geometrySix = new THREE.PlaneGeometry(250, 250, 250);\n  const planeSix = new THREE.Mesh(geometrySix, materialSix);\n  planeSix.position.set(350, 80, -60);\n  planeSix.rotation.y += 1.7;\n  panorama4.add(planeSix); // Sphere five artwork - contains seven & eight\n\n  const geometrySeven = new THREE.PlaneGeometry(300, 300, 300);\n  const loaderSeven = new THREE.TextureLoader();\n  const materialSeven = new THREE.MeshBasicMaterial({\n    map: loaderSeven.load(imagePlaceholder),\n    side: THREE.DoubleSide\n  });\n  const planeSeven = new THREE.Mesh(geometrySeven, materialSeven);\n  planeSeven.position.set(-350, 100, 10);\n  planeSeven.rotation.y += 1.7;\n  panorama5.add(planeSeven);\n  const textureEight = loader.load(gifPlaceholder, // onLoad callback\n  function (reader) {\n    console.log(reader.numFrames());\n  }, // onProgress callback\n  function (xhr) {\n    console.log(`${xhr.loaded / xhr.total * 100}% loaded`);\n  }, // onError callback\n  function () {\n    console.error(\"An error happened.\");\n  });\n  const materialEight = new THREE.MeshBasicMaterial({\n    map: textureEight,\n    // transparent: true,\n    side: THREE.DoubleSide\n  });\n  const geometryEight = new THREE.PlaneGeometry(300, 300, 300);\n  const planeEight = new THREE.Mesh(geometryEight, materialEight);\n  planeEight.position.set(350, 80, -60);\n  planeEight.rotation.y += 1.7;\n  panorama5.add(planeEight); // Sphere six artwork - contains nine\n\n  const geometryNine = new THREE.PlaneGeometry(300, 300, 300);\n  const loaderNine = new THREE.TextureLoader();\n  const materialNine = new THREE.MeshBasicMaterial({\n    map: loaderNine.load(imagePlaceholder),\n    side: THREE.DoubleSide\n  });\n  const planeNine = new THREE.Mesh(geometryNine, materialNine);\n  planeNine.position.set(-350, 160, -220);\n  planeNine.rotation.y += 1;\n  panorama6.add(planeNine); // Sphere seven artwork - contains ten\n\n  const geometryTen = new THREE.PlaneGeometry(250, 250, 250);\n  const loaderTen = new THREE.TextureLoader();\n  const materialTen = new THREE.MeshBasicMaterial({\n    map: loaderTen.load(imagePlaceholder),\n    side: THREE.DoubleSide\n  });\n  const planeTen = new THREE.Mesh(geometryTen, materialTen);\n  planeTen.position.set(-200, 160, -350);\n  planeTen.rotation.y += 0.4;\n  panorama7.add(planeTen); // var light = new THREE.DirectionalLight(0xffffff);\n  // light.position.set(1, 1, 1).normalize();\n  // panorama1.add(light);\n  // var loaderFont = new THREE.FontLoader();\n  // loaderFont.load(\n  //   \"https://threejs.org/examples/fonts/helvetiker_regular.typeface.json\",\n  //   function (font) {\n  //     var textGeometry = new THREE.TextGeometry(\"text\", {\n  //       font: font,\n  //       size: 10,\n  //       height: 10,\n  //       curveSegments: 4,\n  //       bevelThickness: 1,\n  //       bevelSize: 1,\n  //       bevelEnabled: true,\n  //     });\n  //     var textMaterial = new THREE.MeshPhongMaterial({\n  //       color: 0xffffff,\n  //       flatShading: true,\n  //     });\n  //     var meshFont = new THREE.Mesh(textGeometry, textMaterial);\n  //     meshFont.position.set(-120, 5, -20);\n  //     meshFont.rotation.y += 1.5;\n  //     panorama1.add(meshFont);\n  //   }\n  // );\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = SelfGuided;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelfGuided\");","map":{"version":3,"sources":["/Users/bcraig/Desktop/test/src/pages/SelfGuided.js"],"names":["React","useState","useEffect","PANOLENS","THREE","GifLoader","ReactHowler","one","two","three","four","five","six","seven","imagePlaceholder","gifPlaceholder","audio","SelfGuided","panorama1","panorama2","panorama3","panorama4","panorama5","panorama6","panorama7","viewer","progress","progressElement","onEnter","event","undefined","console","log","style","width","classList","remove","onProgress","loaded","total","add","ImagePanorama","addEventListener","link","Vector3","Viewer","autoHideInfospot","loader","geometryOne","PlaneGeometry","loaderOne","TextureLoader","materialOne","MeshBasicMaterial","map","load","side","DoubleSide","planeOne","Mesh","position","set","textureTwo","reader","numFrames","xhr","error","materialTwo","geometryTwo","planeTwo","rotation","y","geometryThree","loaderThree","materialThree","planeThree","geometryFour","loaderFour","materialFour","planeFour","geometryFive","loaderFive","materialFive","planeFive","textureSix","materialSix","geometrySix","planeSix","geometrySeven","loaderSeven","materialSeven","planeSeven","textureEight","materialEight","geometryEight","planeEight","geometryNine","loaderNine","materialNine","planeNine","geometryTen","loaderTen","materialTen","planeTen"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport GifLoader from \"three-gif-loader\";\nimport ReactHowler from \"react-howler\";\n// Spheres\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\nimport seven from \"../assets/spheres/seven.jpg\";\n// Artworks\nimport imagePlaceholder from \"../assets/art/artworkPlaceholder.jpg\";\nimport gifPlaceholder from \"../assets/gifs/gifPlaceholder.gif\";\n// Audio\nimport audio from \"../assets/audio/audio.mp3\"\n\nexport default function SelfGuided() {  \n  let panorama1, \n      panorama2, \n      panorama3, \n      panorama4, \n      panorama5, \n      panorama6, \n      panorama7, \n      viewer,\n      progress, \n      progressElement;\n\n  function onEnter ( event ) {\n    if(progressElement !== undefined) {\n      console.log('erere')\n      progressElement.style.width = 0;\n      progressElement.classList.remove( 'finish' );\n    }\n  }\n\n  function onProgress ( event ) {\n    if(progressElement !== undefined) {\n      console.log('HERE')\n      progress = event.progress.loaded / event.progress.total * 100;\n      progressElement.style.width = progress + '%';\n      if ( progress === 100 ) {\n        progressElement.classList.add( 'finish' );\n      }\n    }\n  }\n\n  // Create spheres\n  // GoogleStreetviewPanorama( 'JmSoPsBPhqWvaBmOqfFzgA' ) could do this to save on file size\n  panorama1 = new PANOLENS.ImagePanorama(one);\n  panorama2 = new PANOLENS.ImagePanorama(two);\n  panorama3 = new PANOLENS.ImagePanorama(three);\n  panorama4 = new PANOLENS.ImagePanorama(four);\n  panorama5 = new PANOLENS.ImagePanorama(five);\n  panorama6 = new PANOLENS.ImagePanorama(six);\n  panorama7 = new PANOLENS.ImagePanorama(seven);\n\n  // Add progress listeners to panoramas\n  panorama1.addEventListener( 'progress', onProgress );\n  panorama1.addEventListener( 'enter', onEnter );\n  panorama2.addEventListener( 'progress', onProgress );\n  panorama2.addEventListener( 'enter', onEnter );\n  panorama3.addEventListener( 'progress', onProgress );\n  panorama3.addEventListener( 'enter', onEnter );\n  panorama4.addEventListener( 'progress', onProgress );\n  panorama4.addEventListener( 'enter', onEnter );\n  panorama5.addEventListener( 'progress', onProgress );\n  panorama5.addEventListener( 'enter', onEnter );\n  panorama6.addEventListener( 'progress', onProgress );\n  panorama6.addEventListener( 'enter', onEnter );\n  panorama7.addEventListener( 'progress', onProgress );\n  panorama7.addEventListener( 'enter', onEnter );\n\n  // Link spheres\n  panorama1.link(panorama2, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama2.link(panorama3, new THREE.Vector3(-6907.5, 304.88, 1000.0));\n  panorama3.link(panorama4, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama4.link(panorama5, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama5.link(panorama6, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama6.link(panorama7, new THREE.Vector3(-207.5, 504.88, -6000.0));\n  panorama7.link(panorama1, new THREE.Vector3(-207.5, 504.88, -6000.0));\n\n  // Create viewer and add panoramas\n  viewer = new PANOLENS.Viewer({ autoHideInfospot: false });\n  viewer.add(panorama1, panorama2, panorama3, panorama4, panorama5, panorama6, panorama7);\n\n  // Gif loader\n  const loader = new GifLoader();\n\n  // Sphere one artwork - contains one\n  const geometryOne = new THREE.PlaneGeometry(300, 300, 300);\n  const loaderOne = new THREE.TextureLoader();\n  const materialOne = new THREE.MeshBasicMaterial({\n    map: loaderOne.load(imagePlaceholder),\n    side: THREE.DoubleSide,\n  });\n  const planeOne = new THREE.Mesh(geometryOne, materialOne);\n  planeOne.position.set(-30, 100, 340);\n  panorama1.add(planeOne);\n\n  // Sphere two artwork - contains two & three\n  const textureTwo = loader.load(\n    gifPlaceholder,\n    // onLoad callback\n    function (reader) {\n      console.log(reader.numFrames());\n    },\n    // onProgress callback\n    function (xhr) {\n      console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n    },\n    // onError callback\n    function () {\n      console.error(\"An error happened.\");\n    }\n  );\n  const materialTwo = new THREE.MeshBasicMaterial({\n    map: textureTwo,\n    // transparent: true,\n    side: THREE.DoubleSide,\n  });\n  const geometryTwo = new THREE.PlaneGeometry(300, 300, 300);\n  const planeTwo = new THREE.Mesh(geometryTwo, materialTwo);\n  planeTwo.position.set(-160, 220, 420);\n  planeTwo.rotation.y -= 0.3;\n  panorama2.add(planeTwo);\n\n  const geometryThree = new THREE.PlaneGeometry(300, 300, 300);\n  const loaderThree = new THREE.TextureLoader();\n  const materialThree = new THREE.MeshBasicMaterial({\n    map: loaderThree.load(imagePlaceholder),\n    side: THREE.DoubleSide,\n  });\n  const planeThree = new THREE.Mesh(geometryThree, materialThree);\n  planeThree.position.set(10, 210, -440);\n  panorama2.add(planeThree);\n\n  // Sphere three artwork - contains four\n  const geometryFour = new THREE.PlaneGeometry(300, 300, 300);\n  const loaderFour = new THREE.TextureLoader();\n  const materialFour = new THREE.MeshBasicMaterial({\n    map: loaderFour.load(imagePlaceholder),\n    side: THREE.DoubleSide,\n  });\n  const planeFour = new THREE.Mesh(geometryFour, materialFour);\n  planeFour.position.set(-450, 130, 90);\n  planeFour.rotation.y += 1.8;\n  panorama3.add(planeFour);\n\n  // Sphere four artwork - contains five & six\n  const geometryFive = new THREE.PlaneGeometry(200, 200, 200);\n  const loaderFive = new THREE.TextureLoader();\n  const materialFive = new THREE.MeshBasicMaterial({\n    map: loaderFive.load(imagePlaceholder),\n    side: THREE.DoubleSide,\n  });\n  const planeFive = new THREE.Mesh(geometryFive, materialFive);\n  planeFive.position.set(-350, -10, 10);\n  planeFive.rotation.y += 1.7;\n  panorama4.add(planeFive);\n\n  const textureSix = loader.load(\n    gifPlaceholder,\n    // onLoad callback\n    function (reader) {\n      console.log(reader.numFrames());\n    },\n    // onProgress callback\n    function (xhr) {\n      console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n    },\n    // onError callback\n    function () {\n      console.error(\"An error happened.\");\n    }\n  );\n  const materialSix = new THREE.MeshBasicMaterial({\n    map: textureSix,\n    // transparent: true,\n    side: THREE.DoubleSide,\n  });\n  const geometrySix = new THREE.PlaneGeometry(250, 250, 250);\n  const planeSix = new THREE.Mesh(geometrySix, materialSix);\n  planeSix.position.set(350, 80, -60);\n  planeSix.rotation.y += 1.7;\n  panorama4.add(planeSix);\n\n  // Sphere five artwork - contains seven & eight\n  const geometrySeven = new THREE.PlaneGeometry(300, 300, 300);\n  const loaderSeven = new THREE.TextureLoader();\n  const materialSeven = new THREE.MeshBasicMaterial({\n    map: loaderSeven.load(imagePlaceholder),\n    side: THREE.DoubleSide,\n  });\n  const planeSeven = new THREE.Mesh(geometrySeven, materialSeven);\n  planeSeven.position.set(-350, 100, 10);\n  planeSeven.rotation.y += 1.7;\n  panorama5.add(planeSeven);\n\n  const textureEight = loader.load(\n    gifPlaceholder,\n    // onLoad callback\n    function (reader) {\n      console.log(reader.numFrames());\n    },\n    // onProgress callback\n    function (xhr) {\n      console.log(`${(xhr.loaded / xhr.total) * 100}% loaded`);\n    },\n    // onError callback\n    function () {\n      console.error(\"An error happened.\");\n    }\n  );\n  const materialEight = new THREE.MeshBasicMaterial({\n    map: textureEight,\n    // transparent: true,\n    side: THREE.DoubleSide,\n  });\n  const geometryEight = new THREE.PlaneGeometry(300, 300, 300);\n  const planeEight = new THREE.Mesh(geometryEight, materialEight);\n  planeEight.position.set(350, 80, -60);\n  planeEight.rotation.y += 1.7;\n  panorama5.add(planeEight);\n\n   // Sphere six artwork - contains nine\n   const geometryNine = new THREE.PlaneGeometry(300, 300, 300);\n   const loaderNine = new THREE.TextureLoader();\n   const materialNine = new THREE.MeshBasicMaterial({\n     map: loaderNine.load(imagePlaceholder),\n     side: THREE.DoubleSide,\n   });\n   const planeNine = new THREE.Mesh(geometryNine, materialNine);\n   planeNine.position.set(-350, 160, -220);\n   planeNine.rotation.y += 1;\n   panorama6.add(planeNine);\n\n   // Sphere seven artwork - contains ten\n   const geometryTen = new THREE.PlaneGeometry(250, 250, 250);\n   const loaderTen = new THREE.TextureLoader();\n   const materialTen = new THREE.MeshBasicMaterial({\n     map: loaderTen.load(imagePlaceholder),\n     side: THREE.DoubleSide,\n   });\n   const planeTen = new THREE.Mesh(geometryTen, materialTen);\n   planeTen.position.set(-200, 160, -350);\n   planeTen.rotation.y += 0.4;\n   panorama7.add(planeTen);\n\n\n\n\n  // var light = new THREE.DirectionalLight(0xffffff);\n  // light.position.set(1, 1, 1).normalize();\n  // panorama1.add(light);\n\n  // var loaderFont = new THREE.FontLoader();\n  // loaderFont.load(\n  //   \"https://threejs.org/examples/fonts/helvetiker_regular.typeface.json\",\n  //   function (font) {\n  //     var textGeometry = new THREE.TextGeometry(\"text\", {\n  //       font: font,\n  //       size: 10,\n  //       height: 10,\n  //       curveSegments: 4,\n  //       bevelThickness: 1,\n  //       bevelSize: 1,\n  //       bevelEnabled: true,\n  //     });\n\n  //     var textMaterial = new THREE.MeshPhongMaterial({\n  //       color: 0xffffff,\n  //       flatShading: true,\n  //     });\n\n  //     var meshFont = new THREE.Mesh(textGeometry, textMaterial);\n  //     meshFont.position.set(-120, 5, -20);\n  //     meshFont.rotation.y += 1.5;\n  //     panorama1.add(meshFont);\n  //   }\n  // );\n\n  return (\n    <>\n      <div id=\"progress\"></div>\n\n      {/* <ReactHowler\n        src={audio}\n        playing={true}\n        loop={true}\n      /> */}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}