{"ast":null,"code":"var _jsxFileName = \"/Users/bcraig/Desktop/test/src/pages/Guided.js\";\nimport React from \"react\";\nimport Typed from \"react-typed\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Guided() {\n  var panorama, viewer, typed, typed;\n  var meterInfospot, valveInfospot, seatInfospot, topboxInfospot, endingInfospot;\n  var progressElement = document.querySelector(\"#progress\");\n  const tweeningDelay = 300,\n        typeStartDelay = 1000,\n        typeSpeed = 50;\n  const paragraphs = {\n    welcome: [\"Panolens Presents\", \"A Journey to a <strong>Train</strong>\", \"Here we go\"],\n    meter: [\"One of the common meter that you can see on a train\", \"it is not specially eye-catching but it just can get your attention\", \"it indicates how fast the train is currently going\", \"Let us continue\"],\n    valve: [\"A Valve\", \"solid looking and quite decent color\", \"here shows the evidence that time would leaves marks on everything\", \"same thing applies to our face...\"],\n    seat: [\"Alright. Here we have a seat. The green pad looks quite comfortable\", \"when you are on a train\", \"OK. Move on to next one\"],\n    box: [\"There is a box over there\", \"probably some fuse or electronic devices\", \"Hmmmm............\", \"Anyway\", \"Let's keep moving\"],\n    ending: [\"This is our last stop\", \"Please continue your journey with this wonder train...\"]\n  }; // Patch for typed.js of cutting back-to-back words\n\n  for (var section in paragraphs) {\n    if (paragraphs.hasOwnProperty(section)) {\n      paragraphs[section].unshift(\"\");\n      paragraphs[section].push(\"\");\n    }\n  }\n\n  function delayExecute(func, delay) {\n    setTimeout(func, delay);\n  }\n\n  function onLoad() {\n    type(paragraphs.welcome, onWelcomeComplete, 2000);\n  }\n\n  function onEnter(event) {\n    var progressElement = document.querySelector(\"#progress\");\n    progressElement.style.width = 0;\n    progressElement.classList.remove(\"finish\");\n  }\n\n  function onProgress(event) {\n    var progressElement = document.querySelector(\"#progress\");\n    var progress = event.progress.loaded / event.progress.total * 100;\n    progressElement.style.width = progress + \"%\";\n\n    if (progress === 100) {\n      progressElement.classList.add(\"finish\");\n    }\n  }\n\n  function onWelcomeComplete() {\n    delayExecute(meterInfospot.focus.bind(meterInfospot), tweeningDelay);\n    type(paragraphs.meter, onMeterTourComplete);\n  }\n\n  function onMeterTourComplete() {\n    delayExecute(valveInfospot.focus.bind(valveInfospot), tweeningDelay);\n    type(paragraphs.valve, onValveTourComplete);\n  }\n\n  function onValveTourComplete() {\n    delayExecute(seatInfospot.focus.bind(seatInfospot), tweeningDelay);\n    type(paragraphs.seat, onSeatTourComplete);\n  }\n\n  function onSeatTourComplete() {\n    delayExecute(topboxInfospot.focus.bind(topboxInfospot), tweeningDelay);\n    type(paragraphs.box, onTopboxTourComplete);\n  }\n\n  function onTopboxTourComplete() {\n    delayExecute(endingInfospot.focus.bind(endingInfospot), tweeningDelay);\n    type(paragraphs.ending, function () {\n      viewer.OrbitControls.enabled = true;\n    });\n  }\n\n  function type(stringArray, onComplete, startDelay) {\n    onComplete = onComplete || function () {};\n\n    startDelay = startDelay >= 0 ? startDelay : typeStartDelay;\n    typed = new Typed(\"#typed\", {\n      strings: stringArray,\n      typeSpeed: typeSpeed,\n      showCursor: false,\n      startDelay: startDelay,\n      onComplete: onComplete\n    });\n  } // Infospots\n\n\n  meterInfospot = new PANOLENS.Infospot();\n  valveInfospot = new PANOLENS.Infospot();\n  seatInfospot = new PANOLENS.Infospot();\n  topboxInfospot = new PANOLENS.Infospot();\n  endingInfospot = new PANOLENS.Infospot(10e-7); // Make it not visible\n\n  meterInfospot.position.set(4610.04, 1280.07, 1431.29);\n  valveInfospot.position.set(4637.61, -798.12, -1671.24);\n  seatInfospot.position.set(1934.61, -2611.69, -3792.91);\n  topboxInfospot.position.set(-3348.82, 3705.92, 45.54);\n  endingInfospot.position.set(-3461.4, -3592.37, -241.38);\n  meterInfospot.addHoverText(\"Speedometer\", 50);\n  valveInfospot.addHoverText(\"Valve\", 50);\n  seatInfospot.addHoverText(\"Seat\", 50);\n  topboxInfospot.addHoverText(\"Box\", 50); // Panorama\n\n  panorama = new PANOLENS.ImagePanorama(one);\n  panorama.addEventListener(\"progress\", onProgress);\n  panorama.addEventListener(\"load\", onLoad);\n  panorama.addEventListener(\"enter\", onEnter);\n  panorama.add(meterInfospot, valveInfospot, seatInfospot, topboxInfospot, endingInfospot); // Viewer\n\n  viewer = new PANOLENS.Viewer({\n    controlBar: false,\n    initialLookAt: new THREE.Vector3(0, 0, 5000)\n  });\n  viewer.OrbitControls.enabled = false;\n  viewer.add(panorama);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dialog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"typed\",\n        children: \"Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = Guided;\n\nvar _c;\n\n$RefreshReg$(_c, \"Guided\");","map":{"version":3,"sources":["/Users/bcraig/Desktop/test/src/pages/Guided.js"],"names":["React","Typed","PANOLENS","THREE","one","two","three","four","five","six","Guided","panorama","viewer","typed","meterInfospot","valveInfospot","seatInfospot","topboxInfospot","endingInfospot","progressElement","document","querySelector","tweeningDelay","typeStartDelay","typeSpeed","paragraphs","welcome","meter","valve","seat","box","ending","section","hasOwnProperty","unshift","push","delayExecute","func","delay","setTimeout","onLoad","type","onWelcomeComplete","onEnter","event","style","width","classList","remove","onProgress","progress","loaded","total","add","focus","bind","onMeterTourComplete","onValveTourComplete","onSeatTourComplete","onTopboxTourComplete","OrbitControls","enabled","stringArray","onComplete","startDelay","strings","showCursor","Infospot","position","set","addHoverText","ImagePanorama","addEventListener","Viewer","controlBar","initialLookAt","Vector3"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;AACA,OAAOC,KAAP,MAAkB,6BAAlB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACA,OAAOC,GAAP,MAAgB,2BAAhB;;;AAEA,eAAe,SAASC,MAAT,GAAkB;AAC/B,MAAIC,QAAJ,EAAcC,MAAd,EAAsBC,KAAtB,EAA6BA,KAA7B;AAEA,MAAIC,aAAJ,EACEC,aADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,cAJF;AAMA,MAAIC,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAtB;AAEA,QAAMC,aAAa,GAAG,GAAtB;AAAA,QACEC,cAAc,GAAG,IADnB;AAAA,QAEEC,SAAS,GAAG,EAFd;AAIA,QAAMC,UAAU,GAAG;AACjBC,IAAAA,OAAO,EAAE,CACP,mBADO,EAEP,uCAFO,EAGP,YAHO,CADQ;AAMjBC,IAAAA,KAAK,EAAE,CACL,qDADK,EAEL,qEAFK,EAGL,oDAHK,EAIL,iBAJK,CANU;AAYjBC,IAAAA,KAAK,EAAE,CACL,SADK,EAEL,sCAFK,EAGL,oEAHK,EAIL,mCAJK,CAZU;AAkBjBC,IAAAA,IAAI,EAAE,CACJ,qEADI,EAEJ,yBAFI,EAGJ,yBAHI,CAlBW;AAuBjBC,IAAAA,GAAG,EAAE,CACH,2BADG,EAEH,0CAFG,EAGH,mBAHG,EAIH,QAJG,EAKH,mBALG,CAvBY;AA8BjBC,IAAAA,MAAM,EAAE,CACN,uBADM,EAEN,wDAFM;AA9BS,GAAnB,CAf+B,CAmD/B;;AACA,OAAK,IAAIC,OAAT,IAAoBP,UAApB,EAAgC;AAC9B,QAAIA,UAAU,CAACQ,cAAX,CAA0BD,OAA1B,CAAJ,EAAwC;AACtCP,MAAAA,UAAU,CAACO,OAAD,CAAV,CAAoBE,OAApB,CAA4B,EAA5B;AACAT,MAAAA,UAAU,CAACO,OAAD,CAAV,CAAoBG,IAApB,CAAyB,EAAzB;AACD;AACF;;AAED,WAASC,YAAT,CAAsBC,IAAtB,EAA4BC,KAA5B,EAAmC;AACjCC,IAAAA,UAAU,CAACF,IAAD,EAAOC,KAAP,CAAV;AACD;;AAED,WAASE,MAAT,GAAkB;AAChBC,IAAAA,IAAI,CAAChB,UAAU,CAACC,OAAZ,EAAqBgB,iBAArB,EAAwC,IAAxC,CAAJ;AACD;;AAED,WAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,QAAIzB,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAtB;AACAF,IAAAA,eAAe,CAAC0B,KAAhB,CAAsBC,KAAtB,GAA8B,CAA9B;AACA3B,IAAAA,eAAe,CAAC4B,SAAhB,CAA0BC,MAA1B,CAAiC,QAAjC;AACD;;AAED,WAASC,UAAT,CAAoBL,KAApB,EAA2B;AACzB,QAAIzB,eAAe,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAtB;AACA,QAAI6B,QAAQ,GAAIN,KAAK,CAACM,QAAN,CAAeC,MAAf,GAAwBP,KAAK,CAACM,QAAN,CAAeE,KAAxC,GAAiD,GAAhE;AACAjC,IAAAA,eAAe,CAAC0B,KAAhB,CAAsBC,KAAtB,GAA8BI,QAAQ,GAAG,GAAzC;;AACA,QAAIA,QAAQ,KAAK,GAAjB,EAAsB;AACpB/B,MAAAA,eAAe,CAAC4B,SAAhB,CAA0BM,GAA1B,CAA8B,QAA9B;AACD;AACF;;AAED,WAASX,iBAAT,GAA6B;AAC3BN,IAAAA,YAAY,CAACtB,aAAa,CAACwC,KAAd,CAAoBC,IAApB,CAAyBzC,aAAzB,CAAD,EAA0CQ,aAA1C,CAAZ;AACAmB,IAAAA,IAAI,CAAChB,UAAU,CAACE,KAAZ,EAAmB6B,mBAAnB,CAAJ;AACD;;AAED,WAASA,mBAAT,GAA+B;AAC7BpB,IAAAA,YAAY,CAACrB,aAAa,CAACuC,KAAd,CAAoBC,IAApB,CAAyBxC,aAAzB,CAAD,EAA0CO,aAA1C,CAAZ;AACAmB,IAAAA,IAAI,CAAChB,UAAU,CAACG,KAAZ,EAAmB6B,mBAAnB,CAAJ;AACD;;AAED,WAASA,mBAAT,GAA+B;AAC7BrB,IAAAA,YAAY,CAACpB,YAAY,CAACsC,KAAb,CAAmBC,IAAnB,CAAwBvC,YAAxB,CAAD,EAAwCM,aAAxC,CAAZ;AACAmB,IAAAA,IAAI,CAAChB,UAAU,CAACI,IAAZ,EAAkB6B,kBAAlB,CAAJ;AACD;;AAED,WAASA,kBAAT,GAA8B;AAC5BtB,IAAAA,YAAY,CAACnB,cAAc,CAACqC,KAAf,CAAqBC,IAArB,CAA0BtC,cAA1B,CAAD,EAA4CK,aAA5C,CAAZ;AACAmB,IAAAA,IAAI,CAAChB,UAAU,CAACK,GAAZ,EAAiB6B,oBAAjB,CAAJ;AACD;;AAED,WAASA,oBAAT,GAAgC;AAC9BvB,IAAAA,YAAY,CAAClB,cAAc,CAACoC,KAAf,CAAqBC,IAArB,CAA0BrC,cAA1B,CAAD,EAA4CI,aAA5C,CAAZ;AACAmB,IAAAA,IAAI,CAAChB,UAAU,CAACM,MAAZ,EAAoB,YAAY;AAClCnB,MAAAA,MAAM,CAACgD,aAAP,CAAqBC,OAArB,GAA+B,IAA/B;AACD,KAFG,CAAJ;AAGD;;AAED,WAASpB,IAAT,CAAcqB,WAAd,EAA2BC,UAA3B,EAAuCC,UAAvC,EAAmD;AACjDD,IAAAA,UAAU,GAAGA,UAAU,IAAI,YAAY,CAAE,CAAzC;;AACAC,IAAAA,UAAU,GAAGA,UAAU,IAAI,CAAd,GAAkBA,UAAlB,GAA+BzC,cAA5C;AAEAV,IAAAA,KAAK,GAAG,IAAIZ,KAAJ,CAAU,QAAV,EAAoB;AAC1BgE,MAAAA,OAAO,EAAEH,WADiB;AAE1BtC,MAAAA,SAAS,EAAEA,SAFe;AAG1B0C,MAAAA,UAAU,EAAE,KAHc;AAI1BF,MAAAA,UAAU,EAAEA,UAJc;AAK1BD,MAAAA,UAAU,EAAEA;AALc,KAApB,CAAR;AAOD,GAxH8B,CA0H/B;;;AACAjD,EAAAA,aAAa,GAAG,IAAIZ,QAAQ,CAACiE,QAAb,EAAhB;AACApD,EAAAA,aAAa,GAAG,IAAIb,QAAQ,CAACiE,QAAb,EAAhB;AACAnD,EAAAA,YAAY,GAAG,IAAId,QAAQ,CAACiE,QAAb,EAAf;AACAlD,EAAAA,cAAc,GAAG,IAAIf,QAAQ,CAACiE,QAAb,EAAjB;AACAjD,EAAAA,cAAc,GAAG,IAAIhB,QAAQ,CAACiE,QAAb,CAAsB,KAAtB,CAAjB,CA/H+B,CA+HgB;;AAE/CrD,EAAAA,aAAa,CAACsD,QAAd,CAAuBC,GAAvB,CAA2B,OAA3B,EAAoC,OAApC,EAA6C,OAA7C;AACAtD,EAAAA,aAAa,CAACqD,QAAd,CAAuBC,GAAvB,CAA2B,OAA3B,EAAoC,CAAC,MAArC,EAA6C,CAAC,OAA9C;AACArD,EAAAA,YAAY,CAACoD,QAAb,CAAsBC,GAAtB,CAA0B,OAA1B,EAAmC,CAAC,OAApC,EAA6C,CAAC,OAA9C;AACApD,EAAAA,cAAc,CAACmD,QAAf,CAAwBC,GAAxB,CAA4B,CAAC,OAA7B,EAAsC,OAAtC,EAA+C,KAA/C;AACAnD,EAAAA,cAAc,CAACkD,QAAf,CAAwBC,GAAxB,CAA4B,CAAC,MAA7B,EAAqC,CAAC,OAAtC,EAA+C,CAAC,MAAhD;AAEAvD,EAAAA,aAAa,CAACwD,YAAd,CAA2B,aAA3B,EAA0C,EAA1C;AACAvD,EAAAA,aAAa,CAACuD,YAAd,CAA2B,OAA3B,EAAoC,EAApC;AACAtD,EAAAA,YAAY,CAACsD,YAAb,CAA0B,MAA1B,EAAkC,EAAlC;AACArD,EAAAA,cAAc,CAACqD,YAAf,CAA4B,KAA5B,EAAmC,EAAnC,EA1I+B,CA4I/B;;AACA3D,EAAAA,QAAQ,GAAG,IAAIT,QAAQ,CAACqE,aAAb,CAA2BnE,GAA3B,CAAX;AACAO,EAAAA,QAAQ,CAAC6D,gBAAT,CAA0B,UAA1B,EAAsCvB,UAAtC;AACAtC,EAAAA,QAAQ,CAAC6D,gBAAT,CAA0B,MAA1B,EAAkChC,MAAlC;AACA7B,EAAAA,QAAQ,CAAC6D,gBAAT,CAA0B,OAA1B,EAAmC7B,OAAnC;AACAhC,EAAAA,QAAQ,CAAC0C,GAAT,CACEvC,aADF,EAEEC,aAFF,EAGEC,YAHF,EAIEC,cAJF,EAKEC,cALF,EAjJ+B,CAyJ/B;;AACAN,EAAAA,MAAM,GAAG,IAAIV,QAAQ,CAACuE,MAAb,CAAoB;AAC3BC,IAAAA,UAAU,EAAE,KADe;AAE3BC,IAAAA,aAAa,EAAE,IAAIxE,KAAK,CAACyE,OAAV,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,IAAxB;AAFY,GAApB,CAAT;AAIAhE,EAAAA,MAAM,CAACgD,aAAP,CAAqBC,OAArB,GAA+B,KAA/B;AACAjD,EAAAA,MAAM,CAACyC,GAAP,CAAW1C,QAAX;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC;AAAR;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,6BACE;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAQD;KAzKuBD,M","sourcesContent":["import React from \"react\";\nimport Typed from \"react-typed\";\nimport * as PANOLENS from \"panolens\";\nimport * as THREE from \"three\";\nimport one from \"../assets/spheres/one.jpg\";\nimport two from \"../assets/spheres/two.jpg\";\nimport three from \"../assets/spheres/three.jpg\";\nimport four from \"../assets/spheres/four.jpg\";\nimport five from \"../assets/spheres/five.jpg\";\nimport six from \"../assets/spheres/six.jpg\";\n\nexport default function Guided() {\n  var panorama, viewer, typed, typed;\n\n  var meterInfospot,\n    valveInfospot,\n    seatInfospot,\n    topboxInfospot,\n    endingInfospot;\n\n  var progressElement = document.querySelector(\"#progress\");\n\n  const tweeningDelay = 300,\n    typeStartDelay = 1000,\n    typeSpeed = 50;\n\n  const paragraphs = {\n    welcome: [\n      \"Panolens Presents\",\n      \"A Journey to a <strong>Train</strong>\",\n      \"Here we go\",\n    ],\n    meter: [\n      \"One of the common meter that you can see on a train\",\n      \"it is not specially eye-catching but it just can get your attention\",\n      \"it indicates how fast the train is currently going\",\n      \"Let us continue\",\n    ],\n    valve: [\n      \"A Valve\",\n      \"solid looking and quite decent color\",\n      \"here shows the evidence that time would leaves marks on everything\",\n      \"same thing applies to our face...\",\n    ],\n    seat: [\n      \"Alright. Here we have a seat. The green pad looks quite comfortable\",\n      \"when you are on a train\",\n      \"OK. Move on to next one\",\n    ],\n    box: [\n      \"There is a box over there\",\n      \"probably some fuse or electronic devices\",\n      \"Hmmmm............\",\n      \"Anyway\",\n      \"Let's keep moving\",\n    ],\n    ending: [\n      \"This is our last stop\",\n      \"Please continue your journey with this wonder train...\",\n    ],\n  };\n\n  // Patch for typed.js of cutting back-to-back words\n  for (var section in paragraphs) {\n    if (paragraphs.hasOwnProperty(section)) {\n      paragraphs[section].unshift(\"\");\n      paragraphs[section].push(\"\");\n    }\n  }\n\n  function delayExecute(func, delay) {\n    setTimeout(func, delay);\n  }\n\n  function onLoad() {\n    type(paragraphs.welcome, onWelcomeComplete, 2000);\n  }\n\n  function onEnter(event) {\n    var progressElement = document.querySelector(\"#progress\");\n    progressElement.style.width = 0;\n    progressElement.classList.remove(\"finish\");\n  }\n\n  function onProgress(event) {\n    var progressElement = document.querySelector(\"#progress\");\n    var progress = (event.progress.loaded / event.progress.total) * 100;\n    progressElement.style.width = progress + \"%\";\n    if (progress === 100) {\n      progressElement.classList.add(\"finish\");\n    }\n  }\n\n  function onWelcomeComplete() {\n    delayExecute(meterInfospot.focus.bind(meterInfospot), tweeningDelay);\n    type(paragraphs.meter, onMeterTourComplete);\n  }\n\n  function onMeterTourComplete() {\n    delayExecute(valveInfospot.focus.bind(valveInfospot), tweeningDelay);\n    type(paragraphs.valve, onValveTourComplete);\n  }\n\n  function onValveTourComplete() {\n    delayExecute(seatInfospot.focus.bind(seatInfospot), tweeningDelay);\n    type(paragraphs.seat, onSeatTourComplete);\n  }\n\n  function onSeatTourComplete() {\n    delayExecute(topboxInfospot.focus.bind(topboxInfospot), tweeningDelay);\n    type(paragraphs.box, onTopboxTourComplete);\n  }\n\n  function onTopboxTourComplete() {\n    delayExecute(endingInfospot.focus.bind(endingInfospot), tweeningDelay);\n    type(paragraphs.ending, function () {\n      viewer.OrbitControls.enabled = true;\n    });\n  }\n\n  function type(stringArray, onComplete, startDelay) {\n    onComplete = onComplete || function () {};\n    startDelay = startDelay >= 0 ? startDelay : typeStartDelay;\n\n    typed = new Typed(\"#typed\", {\n      strings: stringArray,\n      typeSpeed: typeSpeed,\n      showCursor: false,\n      startDelay: startDelay,\n      onComplete: onComplete,\n    });\n  }\n\n  // Infospots\n  meterInfospot = new PANOLENS.Infospot();\n  valveInfospot = new PANOLENS.Infospot();\n  seatInfospot = new PANOLENS.Infospot();\n  topboxInfospot = new PANOLENS.Infospot();\n  endingInfospot = new PANOLENS.Infospot(10e-7); // Make it not visible\n\n  meterInfospot.position.set(4610.04, 1280.07, 1431.29);\n  valveInfospot.position.set(4637.61, -798.12, -1671.24);\n  seatInfospot.position.set(1934.61, -2611.69, -3792.91);\n  topboxInfospot.position.set(-3348.82, 3705.92, 45.54);\n  endingInfospot.position.set(-3461.4, -3592.37, -241.38);\n\n  meterInfospot.addHoverText(\"Speedometer\", 50);\n  valveInfospot.addHoverText(\"Valve\", 50);\n  seatInfospot.addHoverText(\"Seat\", 50);\n  topboxInfospot.addHoverText(\"Box\", 50);\n\n  // Panorama\n  panorama = new PANOLENS.ImagePanorama(one);\n  panorama.addEventListener(\"progress\", onProgress);\n  panorama.addEventListener(\"load\", onLoad);\n  panorama.addEventListener(\"enter\", onEnter);\n  panorama.add(\n    meterInfospot,\n    valveInfospot,\n    seatInfospot,\n    topboxInfospot,\n    endingInfospot\n  );\n\n  // Viewer\n  viewer = new PANOLENS.Viewer({\n    controlBar: false,\n    initialLookAt: new THREE.Vector3(0, 0, 5000),\n  });\n  viewer.OrbitControls.enabled = false;\n  viewer.add(panorama);\n\n  return (\n    <>\n      <div id=\"progress\"></div>\n      <div id=\"dialog\">\n        <div id=\"typed\">Hello</div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}